{"version":3,"sources":["components/Viewer.tsx","components/BaselineTable.tsx","components/Controller.tsx","python/salsasource.py","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HC_exporting","Highcharts","require","Viewer","memo","props","chartComponentRef","useRef","chart","current","selectMode","setBaselinePoints","showSubtraction","isBaselineFitted","gaussianData","xdisplayUnit","setCursorX","setCursorY","fileName","dataSource","unit","options","zoomType","tooltip","enabled","plotOptions","series","enableMouseTracking","followPointer","sourceData","xdata","axisdata","toJs","ydata","rawdata","header","xdataArray","slice","call","map","xi","i","baselineData","baseline","forEach","item","subtractedData","idx","name","type","data","findNearestPointBy","lineWidth","allowPointSelect","push","colorIndex","console","log","gaussian","subtitle","get","title","text","xAxis","yAxis","events","selection","e","points","point","x","min","max","y","select","getSelectedPoints","click","length","undefined","render","highcharts","ref","containerProps","onMouseMove","event","xPos","yPos","pointer","normalize","chartX","plotLeft","chartY","plotTop","chartWidth","chartHeight","toValue","getCursorPos","BaselineTable","index","style","display","onClick","width","GeneralPanel","setUnit","value","minimal","onChange","target","BaselinePanel","setSelectMode","baselinePoints","clearBaseline","getBaselineFit","setShowSubtraction","checked","label","striped","interactive","condensed","overflow","height","GaussianPanel","nGaussian","setNGaussian","getGaussianFit","useState","fitGaussian","setFitGaussian","onValueChange","Controller","id","vertical","panel","pyodideInstance","a","window","loadPyodide","indexURL","pyodide","loadPackage","runScript","code","runPythonAsync","content","globals","App","pyodideObj","pyodideLoaded","setPyodideLoaded","newFileName","setNewfileName","setIsBaselineFitted","setGaussianData","cursorX","cursorY","useEffect","init","setDataSource","getData","file","fetch","salsaSourceDef","script","className","align","Alignment","LEFT","disabled","htmlFor","hidden","reader","FileReader","onabort","onerror","onload","jsarray","Float32Array","result","readAsArrayBuffer","readFile","files","icon","fit_baseline","fit_gaussian","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5347442.chunk.js","sourcesContent":["import { useRef, useState, memo } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport HC_exporting from 'highcharts/modules/exporting';\n\nHC_exporting(Highcharts);\nrequire(\"highcharts/modules/draggable-points\")(Highcharts);\n\n\nconst Viewer = memo((props: any) => {\n\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const chart = chartComponentRef.current?.chart;\n\n  const selectMode = props.selectMode;\n  const setBaselinePoints = props.setBaselinePoints;\n  const showSubtraction = props.showSubtraction;\n  const isBaselineFitted = props.isBaselineFitted;\n\n  const gaussianData = props.gaussianData;\n\n  const selectPointsByDrag = (e: any) => {\n\n    // const chart = chartComponentRef.current?.chart;\n\n    console.log(e)\n    console.log(chart)\n    console.log(\"chart option\", chart?.options)\n\n    if (chart?.series) {\n      chart.series.forEach(\n        (series: any) => {\n          // check the series is selectable, don't select the points on fitting line\n          if (series.options.allowPointSelect === true) {\n            series?.points.forEach(\n              (point: any) => {\n                if (point.x >= e.xAxis[0].min && point.x <= e.xAxis[0].max &&\n                  point.y >= e.yAxis[0].min && point.y <= e.yAxis[0].max) {\n                  point.select(true, true);\n                }\n              }\n            )\n          }\n        }\n      )\n    }\n\n    const data = chart?.getSelectedPoints().map(\n      (point) => { return [point.x, point.y] }\n    )\n\n    setBaselinePoints(data)\n\n    // Fire a custom event\n    // console.log(\"highchart\", Highcharts);\n    // Highcharts.fireEvent(chart, 'selectedpoints', { points: chart?.getSelectedPoints() });\n\n    return false; // Don't zoom\n  }\n\n  function unselectByClick() {\n    const points = chart?.getSelectedPoints();\n    if (points?.length && points.length > 0) {\n      points.forEach((point) => {\n        point.select(false);\n      })\n    }\n    setBaselinePoints([]);\n  }\n\n  const setCursorX = props.setCursorX;\n  const setCursorY = props.setCursorY;\n\n  // const addBaselinePoints = (point: Array<number>) => {\n  //   setBaselinePoints([...baselinePoints, point]);\n  // };\n\n  // TODO: update table when drag and drop\n  // const updateBaselinePoints = (oldPoint: Array<number>, newPoint: Array<number>) => {\n  //   // console.log(\"update\", oldPoint, newPoint);\n  //   // const test = baselinePoints.map((x, i) => [i, x]);\n  //   // console.log(\"test\", test)\n  //   // const targetIdx = baselinePoints.filter((ele) => {\n  //   //   console.log(\"filter\", ele)\n  //   //   return ele[0] === oldPoint[0] && ele[1] === oldPoint[1]\n  //   // });\n  //   // console.log(\"idx:\", targetIdx);\n  //   console.log(\"a\", baselinePoints);\n  //   setBaselinePoints([...baselinePoints]);\n  //   console.log(\"b\", baselinePoints);\n  //   // setBaselinePoints(baselinePoints[baselinePoints.map((x, i) => [i, x]).filter(\n  //   //   x => x[1] == point)[0][0]] = point);\n  // }\n\n  const fileName = props.fileName;\n  const dataSource = props.dataSource;\n  const unit = props.unit;\n  let xdisplayUnit;\n\n  if (unit === \"freq-k\") {\n    xdisplayUnit = \"kHz\";\n  } else if (unit === \"freq-m\") {\n    xdisplayUnit = \"MHz\";\n  } else if (unit === \"freq-g\") {\n    xdisplayUnit = \"GHz\";\n  } else if (unit === \"chan\") {\n    xdisplayUnit = \"Channel\";\n  } else if (unit === \"vel\") {\n    xdisplayUnit = \"Velocity (km/s)\";\n  } else {\n    xdisplayUnit = \"Hz\";\n  }\n\n  const options: Highcharts.Options = {\n    chart: {\n      zoomType: 'x',\n    },\n    tooltip: {\n      enabled: true\n    },\n    plotOptions: {\n      series: {\n        enableMouseTracking: true,\n        tooltip: {\n          followPointer: false,\n        },\n      },\n    },\n  };\n\n  let sourceData: number[][] = [];\n\n  if (dataSource) {\n\n    const xdata = dataSource.axisdata(1, unit).toJs();\n    const ydata = dataSource.rawdata.toJs()[0][0];\n    const header = dataSource.header.toJs();\n\n    const xdataArray = [].slice.call(xdata);\n    sourceData = xdataArray.map((xi: number, i: number) => {\n      return [xi, ydata[i]];\n    });\n\n    // create dummy baseline array and updated the value if fitting has done\n    const baselineData = xdataArray.map((xi: number, i: number) => {\n      return [xi, 0.0];\n    });\n\n    if (isBaselineFitted === true) {\n      const ydata = dataSource.baseline.toJs();\n      baselineData.forEach((item: number[], i: number) => {\n        item[1] = ydata[i];\n      });\n    }\n\n    // create subtracted data if the option is selected\n    if (showSubtraction === true) {\n      const subtractedData = sourceData.map(\n        (item: number[], idx: number) => {\n          return [item[0], item[1] - baselineData[idx][1]]\n        }\n      )\n      options.series = [\n        {\n          name: 'Observation - Baseline',\n          type: 'scatter',\n          data: subtractedData,\n          findNearestPointBy: 'xy',\n        },\n      ];\n    }\n    else {\n      options.series = [\n        {\n          name: 'Observation',\n          type: 'scatter',\n          lineWidth: 2,\n          data: sourceData,\n          allowPointSelect: selectMode,\n          findNearestPointBy: 'xy',\n        },\n        // {\n        //   name: \"Baseline\",\n        //   type: \"scatter\",\n        //   data: props.baselinePoints,\n        //   dragDrop: {\n        //     draggableX: true,\n        //     draggableY: true\n        //   },\n        // },\n      ];\n\n      // add another label if we plot both original data and baseline\n      if (isBaselineFitted === true) {\n        options.series.push({\n          name: 'Baseline fitting',\n          type: 'line',\n          data: baselineData,\n          allowPointSelect: false,\n          colorIndex: 3,\n        })\n      }\n      console.log(\"series\", options.series);\n    }\n\n    if (gaussianData) {\n      const gaussian = xdataArray.map((xi: number, i: number) => {\n        return [xi, 0.0];\n      });\n      gaussian.forEach((item: number[], i: number) => {\n        item[1] = gaussianData[i];\n      });\n      options.series.push(\n        {\n          name: 'Gaussian',\n          type: 'line',\n          data: gaussian,\n          findNearestPointBy: 'xy',\n        },\n      );\n    }\n\n    // options.series = [\n    //   {\n    //     name: \"Observation\",\n    //     type: 'line',\n    //     data: sourceData,\n    //     allowPointSelect: selectMode,\n    //   },\n    //   {\n    //     name: \"Baseline\",\n    //     type: \"scatter\",\n    //     data: baselinePoints,\n    //     dragDrop: {\n    //       draggableX: true,\n    //       draggableY: true\n    //     },\n    //   }\n    // ];\n\n    const subtitle = `${header.get(\"CTYPE2\")}: ${header.get(\"CRVAL2\")}, ${header.get(\"CTYPE3\")}: ${header.get(\"CRVAL3\")}`;\n\n    options.title = {\n      text: fileName\n    };\n\n    options.subtitle = {\n      text: subtitle\n    };\n\n    const xAxis = {\n      title: {\n        text: xdisplayUnit,\n      },\n      // labels: {\n      //   format: '{value:.2f}',\n      // }\n    };\n    const yAxis = {\n      title: {\n        text: header.get('BUNIT'),\n      }\n    };\n\n    options.xAxis = xAxis;\n    options.yAxis = yAxis;\n\n  }\n\n  if (selectMode === true && options.chart) {\n    options.chart.zoomType = 'xy';\n    options.chart.events = {\n      selection: selectPointsByDrag,\n      click: unselectByClick,\n    };\n  }\n  else if (options.chart) {\n    options.chart.zoomType = 'x';\n    options.chart.events = {\n      selection: undefined,\n      click: undefined,\n      render: undefined,\n    }\n  }\n\n  console.log(\"options\", options)\n\n  const getCursorPos = (event: any) => {\n    let xPos = 0.0;\n    let yPos = 0.0;\n    if (chart) {\n      const e = chart.pointer.normalize(event);\n      const x = e.chartX - chart.plotLeft;\n      const y = e.chartY - chart.plotTop;\n      // const top = chart.container.offsetTop;\n      // const left = chart.container.offsetLeft;\n      // const x = event.clientX - chart.plotLeft - left;\n      // const y = event.clientY - chart.plotTop - top;\n      if (x >= 0 && y >= 0 && x <= chart.chartWidth && y <= chart.chartHeight) {\n        // console.log(chart.xAxis[0].toValue(x, true));\n        // console.log(chart.yAxis[0].toValue(chart.plotHeight - y, true));\n        // setCursorX(chart.xAxis[0].toValue(x, true));\n        // setCursorY(chart.yAxis[0].toValue(y, true));\n        xPos = chart.xAxis[0].toValue(x, true);\n        yPos = chart.yAxis[0].toValue(y, true);\n      }\n      // console.log(event);\n    }\n    // console.log(event);\n    return { xPos, yPos };\n  }\n\n  const handleMouseMove = (event: any) => {\n    const { xPos, yPos } = getCursorPos(event);\n    setCursorX(xPos);\n    setCursorY(yPos);\n  };\n\n  return (\n    <>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={options}\n        ref={chartComponentRef}\n        containerProps={{\n          onMouseMove: handleMouseMove,\n          // onDoubleClick: handleDoubleClick,\n        }}\n      />\n    </>\n  );\n});\n\n\nexport default Viewer;","const BaselineTable = (props: any) => {\n\n  const baseline = props.baseline;\n\n  return (\n    baseline.map((item: any, index: number) => {\n      return (\n        <tr style={{ display: \"table\" }} key={item[0]} onClick={() => { console.log(\"click table\") }}>\n          <td style={{ width: 140 }}>{index}</td>\n          <td style={{ width: 140 }}>{item[0]}</td>\n          <td style={{ width: 140 }}>{item[1]}</td>\n          {/* <td><Button icon=\"cross\" minimal={true} onClick={() => { setBaselinePoints(baselinePoints.filter(ele => ele !== item)) }} /></td> */}\n        </tr>);\n    })\n  )\n};\n\nexport default BaselineTable;","import { Button, HTMLSelect, HTMLTable, Label, NumericInput, Switch, Tabs, Tab } from \"@blueprintjs/core\";\nimport { useState } from \"react\";\nimport BaselineTable from './BaselineTable';\n\nconst Controller = (props: any) => {\n\n  const unit = props.unit;\n  const setUnit = props.setUnit;\n\n  const selectMode = props.selectMode;\n  const setSelectMode = props.setSelectMode;\n\n  const baselinePoints = props.baselinePoints;\n  const getBaselineFit = props.getBaselineFit;\n\n  const showSubtraction = props.showSubtraction;\n  const setShowSubtraction = props.setShowSubtraction;\n\n  const [nGaussian, setNGaussian] = useState(1);\n  const getGaussianFit = props.getGaussianFit;\n  const clearBaseline = props.clearBaseline;\n\n  return (\n    <div>\n      <Tabs id=\"viewerpanels\" vertical={true}>\n        <Tab\n          id=\"generalpanel\"\n          title=\"General\"\n          panel={<GeneralPanel unit={unit} setUnit={setUnit} />} />\n        <Tab\n          id=\"baselinepanel\"\n          title=\"Baseline\"\n          panel={\n            <BaselinePanel\n              selectMode={selectMode}\n              setSelectMode={setSelectMode}\n              baselinePoints={baselinePoints}\n              clearBaseline={clearBaseline}\n              getBaselineFit={getBaselineFit}\n              showSubtraction={showSubtraction}\n              setShowSubtraction={setShowSubtraction}\n            />\n          }\n        />\n        <Tab\n          id=\"gaussianpanel\"\n          title=\"Gaussian\"\n          panel={<GaussianPanel nGaussian={nGaussian} setNGaussian={setNGaussian} getGaussianFit={getGaussianFit} />}\n        />\n      </Tabs>\n    </div>\n  )\n};\n\nconst GeneralPanel = (props: any) => {\n\n  const unit = props.unit;\n  const setUnit = props.setUnit;\n\n  return (\n    <>\n      <Label>\n        x-axis unit:\n        <HTMLSelect value={unit} minimal={true} onChange={(e) => { setUnit(e.target.value) }}>\n          <option value=\"freq\">Frequency (Hz)</option>\n          <option value=\"freq-k\">Frequency (kHz)</option>\n          <option value=\"freq-m\">Frequency (MHz)</option>\n          <option value=\"freq-g\">Frequency (GHz)</option>\n          <option value=\"chan\">Channel</option>\n          <option value=\"vel\">Velocity (km/s)</option>\n        </HTMLSelect>\n      </Label>\n    </>\n  )\n}\n\nconst BaselinePanel = (props: any) => {\n\n  const selectMode = props.selectMode;\n  const setSelectMode = props.setSelectMode;\n\n  const baselinePoints = props.baselinePoints;\n  const clearBaseline = props.clearBaseline;\n  const getBaselineFit = props.getBaselineFit;\n\n  const showSubtraction = props.showSubtraction;\n  const setShowSubtraction = props.setShowSubtraction;\n\n  return (\n    <div>\n      <Switch checked={selectMode} label=\"select baseline\" onChange={() => { setSelectMode(!selectMode) }} />\n      <Switch checked={showSubtraction} label=\"Show only subtraction\" onChange={() => { setShowSubtraction(!showSubtraction) }} />\n      <Button text=\"Clear\" onClick={() => { clearBaseline() }} />\n      <HTMLTable striped={true} interactive={true} condensed={true}>\n        {/* <caption>Selected Baseline Points</caption> */}\n        <thead style={{ display: \"table\" }}>\n          <tr>\n            <th style={{ width: 140 }}>Selected Points</th>\n            <th style={{ width: 140 }}>X coordinate</th>\n            <th style={{ width: 140 }}>Y coordinate</th>\n            {/* <th><Button icon=\"trash\" text=\"Clear All\" onClick={() => { setBaselinePoints([]) }} /></th> */}\n          </tr>\n        </thead>\n        <tbody style={{ display: \"block\", overflow: \"auto\", height: 150 }}>\n          <BaselineTable baseline={baselinePoints} />\n          {/* {baselinePoints.map(item => {\n              return (\n                <tr key={item[0]} onClick={() => { console.log(\"click table\") }}>\n                  <td>{item[0]}</td>\n                  <td>{item[1]}</td>\n                  <td><Button icon=\"cross\" minimal={true} onClick={() => { setBaselinePoints(baselinePoints.filter(ele => ele !== item)) }} /></td>\n                </tr>\n              );\n            })} */}\n        </tbody>\n      </HTMLTable>\n      <Button text=\"Fit Baseline\" onClick={() => { getBaselineFit(baselinePoints) }} />\n    </div>\n  )\n}\n\nconst GaussianPanel = (props: any) => {\n  const nGaussian = props.nGaussian;\n  const setNGaussian = props.setNGaussian;\n  const getGaussianFit = props.getGaussianFit;\n  const [fitGaussian, setFitGaussian] = useState(false);\n  return (\n    <div>\n      <Switch\n        checked={fitGaussian}\n        label=\"Fit Gaussian\"\n        onChange={() => {\n          setFitGaussian(!fitGaussian);\n          getGaussianFit(nGaussian);\n        }}\n      />\n      <NumericInput\n        value={nGaussian}\n        min={1}\n        onValueChange={(value) => {\n          setNGaussian(value);\n          if (fitGaussian) getGaussianFit(value);\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Controller;","export default __webpack_public_path__ + \"static/media/salsasource.1ec6a3c9.py\";","import { useState, useEffect, useRef } from 'react';\nimport { Alignment, Button, Icon, Navbar, NavbarDivider, NavbarGroup, NavbarHeading } from '@blueprintjs/core';\nimport Viewer from './components/Viewer';\nimport Controller from './components/Controller';\nimport salsaSourceDef from './python/salsasource.py';\nimport './App.css';\n\ndeclare global { // <- [reference](https://stackoverflow.com/a/56458070/11542903)\n  interface Window {\n    pyodide: any;\n    jsarray: any;\n    loadPyodide: any;\n    // languagePluginLoader: any;\n  }\n}\n\nconst pyodideInstance = async () => {\n  const pyodide = await window.loadPyodide({\n    indexURL: \"https://cdn.jsdelivr.net/pyodide/v0.18.1/full/\"\n  });\n  await pyodide.loadPackage([\"astropy\", \"scipy\"])\n  // await pyodide.loadPackage(\"astropy\")\n  return pyodide\n}\n\nconst runScript = async (pyodide: any, code: string) => {\n  await pyodide.runPythonAsync(code)\n  const content = pyodide.globals.get(\"salsa\")\n  console.log(\"globals\", content)\n\n  return content\n}\n\nfunction App() {\n  const pyodideObj = useRef<any>(null);\n  const [pyodideLoaded, setPyodideLoaded] = useState(false);\n  const [newFileName, setNewfileName] = useState(\"\");\n  const [unit, setUnit] = useState(\"freq\");\n\n  const [selectMode, setSelectMode] = useState(false);\n\n  const [baselinePoints, setBaselinePoints] = useState<number[][]>([]);\n  const [isBaselineFitted, setIsBaselineFitted] = useState(false);\n  const [showSubtraction, setShowSubtraction] = useState(false);\n\n  const [gaussianData, setGaussianData] = useState<number[]>([]);\n\n  const [cursorX, setCursorX] = useState(0);\n  const [cursorY, setCursorY] = useState(0);\n\n  useEffect(() => {\n    async function init() {\n      if (!pyodideLoaded) {\n        pyodideObj.current = await pyodideInstance();\n        setPyodideLoaded(true)\n      } else {\n        console.log(\"no duplicate reload to avoid pyodide error\")\n      }\n    }\n    init()\n  });\n\n  const [dataSource, setDataSource] = useState<any>();\n\n  const getData = async (file: File) => {\n    const script = await (await fetch(salsaSourceDef)).text();\n    // console.log(\"script text\", scriptText)\n    const content = await runScript(pyodideObj.current, script);\n    // console.log(\"content\", content)\n    // console.log(\"header\", content.header.toJs())\n    // const xdata = content.axisdata(1).toJs()\n    // const ydata = content.rawdata.toJs()[0][0]\n\n    setNewfileName(file.name);\n    setDataSource(content);\n  }\n\n  const readFile = (file: File) => {\n    if (file) {\n      console.log(\"processing file:\", file)\n      const reader = new FileReader()\n\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        window.jsarray = new Float32Array(reader.result as ArrayBuffer);\n        getData(file);\n      }\n      reader.readAsArrayBuffer(file)\n    }\n  }\n\n  const getBaselineFit = (points: number[][]) => {\n\n    const xdata = points.map((item: number[]) => { return item[0] });\n    const ydata = points.map((item: number[]) => { return item[1] });\n    if (!xdata.length || !ydata.length) {\n      dataSource.baseline = [];\n      setIsBaselineFitted(false);\n    }\n    else {\n      dataSource?.fit_baseline(xdata, ydata, unit);\n      setIsBaselineFitted(true);\n    }\n  }\n\n  const clearBaseline = () => {\n    setBaselinePoints([])\n    dataSource?.fit_baseline([], [], unit);\n    setIsBaselineFitted(false);\n  }\n\n  const getGaussianFit = (nGaussian: number) => {\n    const result = dataSource?.fit_gaussian(unit, nGaussian).toJs();\n    setGaussianData(result);\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar>\n        <NavbarGroup align={Alignment.LEFT}>\n          <NavbarHeading>SalsaTS</NavbarHeading>\n          <NavbarDivider />\n          <Button disabled={!pyodideLoaded}>\n            <label htmlFor=\"input\">\n              <input type=\"file\" id=\"input\" hidden onChange={(e: any) => { readFile(e.target.files[0]) }} />\n              <Icon icon=\"document\" /> Upload\n            </label>\n          </Button>\n        </NavbarGroup>\n      </Navbar>\n      <Viewer\n        fileName={newFileName}\n        dataSource={dataSource}\n        unit={unit}\n        selectMode={selectMode}\n        baselinePoints={baselinePoints}\n        isBaselineFitted={isBaselineFitted}\n        setBaselinePoints={setBaselinePoints}\n        showSubtraction={showSubtraction}\n        gaussianData={gaussianData}\n        setCursorX={setCursorX}\n        setCursorY={setCursorY}\n      />\n      <h4>X: {cursorX} Y: {cursorY}</h4>\n      <Controller\n        unit={unit}\n        setUnit={setUnit}\n        selectMode={selectMode}\n        setSelectMode={setSelectMode}\n        baselinePoints={baselinePoints}\n        clearBaseline={clearBaseline}\n        getBaselineFit={getBaselineFit}\n        showSubtraction={showSubtraction}\n        setShowSubtraction={setShowSubtraction}\n        getGaussianFit={getGaussianFit}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}