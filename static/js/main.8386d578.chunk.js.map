{"version":3,"sources":["redux/cursorSlice.tsx","redux/baselineSlice.tsx","redux/gaussianSlice.tsx","Helper.tsx","components/Viewer.tsx","python/salsasource.py","App.tsx","reportWebVitals.ts","redux/store.tsx","index.tsx"],"names":["cursorSlice","createSlice","name","initialState","position","drag","reducers","setPosition","state","action","payload","setDrag","actions","baselineSlice","dataPoints","fitValues","subtraction","setDataPoints","setFitValues","setSubtraction","GaussianSlice","order","isFitting","guess","params","fit","setOrder","setIsFitting","setGaussianGuess","setGaussianFit","toSciSymbol","num","digits","toExponential","split","map","item","Number","coeff","exp","toFixed","HC_more","Highcharts","HC_exporting","require","Viewer","memo","props","selectionFunction","xdisplayUnit","dispatch","useDispatch","useSelector","cursor","isSelecting","baselineFit","baseline","isBaselineFitted","length","gaussian","gaussianGuess","gaussianFit","chartComponentRef","useRef","chart","current","fileName","dataSource","unit","setUnit","e","console","log","options","series","forEach","allowPointSelect","points","point","x","xAxis","min","max","y","yAxis","select","data","getSelectedPoints","result","fit_gaussian","toJs","slice","call","fitGaussian","zoomType","tooltip","enabled","plotOptions","enableMouseTracking","followPointer","events","click","filter","value","index","sourceData","xdata","axisdata","ydata","rawdata","header","xdataArray","xi","i","baselineData","subtractedData","idx","type","findNearestPointBy","lineWidth","push","colorIndex","xmin","xmax","ymin","ymax","color","opacity","subtitle","get","title","text","renderTo","container","selection","undefined","render","highcharts","ref","containerProps","onMouseMove","event","xPos","yPos","pointer","normalize","chartX","plotLeft","chartY","plotTop","chartWidth","chartHeight","toValue","getCursorPos","unSelectAllPoints","Toolbar","baselinePoints","fitBaseline","fit_baseline","nGaussian","style","display","content","Position","TOP_LEFT","minimal","icon","small","active","onClick","disabled","className","Classes","TOOLTIP_INDICATOR","width","onValueChange","marginLeft","height","label","inline","onChange","target","pyodideInstance","a","window","loadPyodide","indexURL","pyodide","loadPackage","runScript","code","runPythonAsync","globals","CursorInforPanel","textAlign","BaselinePointTable","overflow","numRows","enableGhostCells","cellRenderer","rowIndex","GaussianGuessTable","columnWidths","App","pyodideObj","useState","pyodideLoaded","setPyodideLoaded","newFileName","setNewfileName","setDataSource","useEffect","init","getData","file","fetch","salsaSourceDef","script","align","Alignment","LEFT","htmlFor","id","hidden","reader","FileReader","onabort","onerror","onload","jsarray","Float32Array","readAsArrayBuffer","readFile","files","RIGHT","preventDefault","open","flex","panel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","cursorReducer","baselineReducer","gaussianReducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8386d578.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface CursorState {\n  position: number[]\n  drag: string\n}\n\nconst initialState: CursorState = {\n  position: [0, 0],\n  drag: \"zoom\"\n}\n\nexport const cursorSlice = createSlice({\n  name: 'cursor',\n  initialState,\n  reducers: {\n    setPosition: (state, action: PayloadAction<number[]>) => {\n      state.position = action.payload\n    },\n    setDrag: (state, action: PayloadAction<string>) => {\n      state.drag = action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setPosition, setDrag } = cursorSlice.actions\n\nexport default cursorSlice.reducer","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface BaselineState {\n  dataPoints: number[][]\n  fitValues: number[]\n  subtraction: boolean\n}\n\nconst initialState: BaselineState = {\n  dataPoints: [],\n  fitValues: [],\n  subtraction: false\n}\n\nexport const baselineSlice = createSlice({\n  name: 'baseline',\n  initialState,\n  reducers: {\n    setDataPoints: (state, action: PayloadAction<number[][]>) => {\n      state.dataPoints = action.payload\n    },\n    setFitValues: (state, action: PayloadAction<number[]>) => {\n      state.fitValues = action.payload\n    },\n    setSubtraction: (state, action: PayloadAction<boolean>) => {\n      state.subtraction = action.payload\n    }\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setDataPoints, setFitValues, setSubtraction } = baselineSlice.actions\n\nexport default baselineSlice.reducer","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface GaussianState {\n  order: number\n  isFitting: boolean\n  guess: number[][]\n  params: number[][]\n  fit: number[]\n}\n\nconst initialState: GaussianState = {\n  order: 0,\n  isFitting: false,\n  guess: [],\n  params: [],\n  fit: [],\n}\n\nexport const GaussianSlice = createSlice({\n  name: 'gaussian',\n  initialState,\n  reducers: {\n    setOrder: (state, action: PayloadAction<number>) => {\n      state.order = action.payload\n    },\n    setIsFitting: (state, action: PayloadAction<boolean>) => {\n      state.isFitting = action.payload\n    },\n    setGaussianGuess: (state, action: PayloadAction<number[][]>) => {\n      state.guess = action.payload\n    },\n    setGaussianFit: (state, action: PayloadAction<number[]>) => {\n      state.fit = action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setOrder, setIsFitting, setGaussianGuess, setGaussianFit } = GaussianSlice.actions\n\nexport default GaussianSlice.reducer","export const toSciSymbol = (num: number, digits: number = 3) => {\n  if (!num) {\n    return 0.0;\n  }\n  const [coeff, exp] = num.toExponential().split('e').map(item => Number(item));\n  return exp === 0 ? `${coeff.toFixed(digits)}` : `${coeff.toFixed(digits)}x10^${exp}`;\n}","import { useEffect, useRef, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../redux/store';\nimport { setDrag, setPosition } from '../redux/cursorSlice';\nimport { setDataPoints, setFitValues, setSubtraction } from '../redux/baselineSlice';\nimport { setOrder, setIsFitting, setGaussianGuess, setGaussianFit } from '../redux/gaussianSlice';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport HC_more from 'highcharts/highcharts-more';\nimport HC_exporting from 'highcharts/modules/exporting';\nimport { AnchorButton, Classes, ButtonGroup, Divider, FormGroup, HTMLSelect, NumericInput, Position } from '@blueprintjs/core';\nimport { Popover2, Tooltip2 } from \"@blueprintjs/popover2\";\nimport { toSciSymbol } from \"../Helper\";\n\nHC_more(Highcharts);\nHC_exporting(Highcharts);\nrequire(\"highcharts/modules/draggable-points\")(Highcharts);\nrequire(\"highcharts/modules/accessibility\")(Highcharts);\n\n\nconst Viewer = memo((props: any) => {\n\n  const dispatch = useDispatch();\n  const drag = useSelector((state: RootState) => state.cursor.drag);\n  const isSelecting = drag === \"baseline\" || drag === \"gaussian\";\n\n  const baselineFit = useSelector((state: RootState) => state.baseline.fitValues);\n  const subtraction = useSelector((state: RootState) => state.baseline.subtraction);\n  const isBaselineFitted = baselineFit.length > 0;\n\n  const order = useSelector((state: RootState) => state.gaussian.order);\n  const isFitting = useSelector((state: RootState) => state.gaussian.isFitting);\n  const gaussianGuess = useSelector((state: RootState) => state.gaussian.guess);\n  const gaussianFit = useSelector((state: RootState) => state.gaussian.fit);\n\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const chart = chartComponentRef.current?.chart;\n\n  const fileName = props.fileName;\n  const dataSource = props.dataSource;\n  const unit = props.unit;\n  const setUnit = props.setUnit;\n\n  const fitGaussian = (order: number, guess: number[][]) => {\n    const result = dataSource?.fit_gaussian(unit, order, guess).toJs();\n    const fit = [].slice.call(result);\n    dispatch(setGaussianFit(fit));\n  }\n\n  const selectPoints = (e: any) => {\n\n    // const chart = chartComponentRef.current?.chart;\n\n    console.log(e)\n    console.log(chart)\n    console.log(\"chart option\", chart?.options)\n\n    if (chart?.series) {\n      chart.series.forEach(\n        (series: any) => {\n          // check the series is selectable, don't select the points on fitting line\n          if (series.options.allowPointSelect === true) {\n            series?.points.forEach(\n              (point: any) => {\n                if (point.x >= e.xAxis[0].min && point.x <= e.xAxis[0].max &&\n                  point.y >= e.yAxis[0].min && point.y <= e.yAxis[0].max) {\n                  point.select(true, true);\n                }\n              }\n            )\n          }\n        }\n      )\n    }\n\n    const data = chart?.getSelectedPoints().map(\n      (point) => { return [point.x || 0.0, point.y || 0.0] }\n    ) || [];\n\n    dispatch(setDataPoints(data));\n\n    // Fire a custom event\n    // console.log(\"highchart\", Highcharts);\n    // Highcharts.fireEvent(chart, 'selectedpoints', { points: chart?.getSelectedPoints() });\n\n    return false; // Don't zoom\n  }\n\n  const unSelectAllPoints = () => {\n    const points = chart?.getSelectedPoints();\n    if (points?.length && points.length > 0) {\n      points.forEach((point) => {\n        point.select(false);\n      })\n    }\n    // dispatch(setDataPoints([]));\n  }\n\n  const selectRange = (e: any) => {\n\n    // const chart = chartComponentRef.current?.chart;\n\n    // console.log(e)\n    // console.log(chart)\n    // console.log(\"chart option\", chart?.options)\n\n    const xmin = e.xAxis[0].min;\n    const xmax = e.xAxis[0].max;\n    const ymin = e.yAxis[0].min;\n    const ymax = e.yAxis[0].max;\n\n    const guess = [xmin, xmax, ymin, ymax];\n    dispatch(setGaussianGuess([...gaussianGuess, guess]));\n\n    if (isFitting) {\n      fitGaussian(order, [...gaussianGuess, guess]);\n    }\n\n    // Fire a custom event\n    // console.log(\"highchart\", Highcharts);\n    // Highcharts.fireEvent(chart, 'selectedpoints', { points: chart?.getSelectedPoints() });\n\n    return false; // Don't zoom\n  }\n\n  let selectionFunction;\n  if (drag === \"baseline\") {\n    selectionFunction = selectPoints;\n  }\n  else if (drag === \"gaussian\") {\n    selectionFunction = selectRange;\n  }\n\n  function unselectByClick() {\n    const points = chart?.getSelectedPoints();\n    if (points?.length && points.length > 0) {\n      points.forEach((point) => {\n        point.select(false);\n      })\n    }\n    dispatch(setDataPoints([]));\n  }\n\n  // const setCursorX = props.setCursorX;\n  // const setCursorY = props.setCursorY;\n\n  // const addBaselinePoints = (point: Array<number>) => {\n  //   setBaselinePoints([...baselinePoints, point]);\n  // };\n\n  // TODO: update table when drag and drop\n  // const updateBaselinePoints = (oldPoint: Array<number>, newPoint: Array<number>) => {\n  //   // console.log(\"update\", oldPoint, newPoint);\n  //   // const test = baselinePoints.map((x, i) => [i, x]);\n  //   // console.log(\"test\", test)\n  //   // const targetIdx = baselinePoints.filter((ele) => {\n  //   //   console.log(\"filter\", ele)\n  //   //   return ele[0] === oldPoint[0] && ele[1] === oldPoint[1]\n  //   // });\n  //   // console.log(\"idx:\", targetIdx);\n  //   console.log(\"a\", baselinePoints);\n  //   setBaselinePoints([...baselinePoints]);\n  //   console.log(\"b\", baselinePoints);\n  //   // setBaselinePoints(baselinePoints[baselinePoints.map((x, i) => [i, x]).filter(\n  //   //   x => x[1] == point)[0][0]] = point);\n  // }\n\n  let xdisplayUnit;\n\n  if (unit === \"freq-k\") {\n    xdisplayUnit = \"kHz\";\n  } else if (unit === \"freq-m\") {\n    xdisplayUnit = \"MHz\";\n  } else if (unit === \"freq-g\") {\n    xdisplayUnit = \"GHz\";\n  } else if (unit === \"chan\") {\n    xdisplayUnit = \"Channel\";\n  } else if (unit === \"vel\") {\n    xdisplayUnit = \"Velocity (km/s)\";\n  } else {\n    xdisplayUnit = \"Hz\";\n  }\n\n  const options: Highcharts.Options = {\n    chart: {\n      zoomType: 'x',\n    },\n    tooltip: {\n      enabled: true\n    },\n    plotOptions: {\n      series: {\n        enableMouseTracking: true,\n        tooltip: {\n          followPointer: false,\n        },\n        events: {\n          click: (e) => {\n            dispatch(\n              setGaussianGuess(\n                gaussianGuess.filter(\n                  (value: number[], index: number) =>\n                    index !== e.point.series.index - (3 - Number(subtraction))\n                )));\n          }\n        }\n      },\n    },\n  };\n\n  let sourceData: number[][] = [];\n\n  if (dataSource) {\n\n    const xdata = dataSource.axisdata(1, unit).toJs();\n    const ydata = dataSource.rawdata.toJs()[0][0];\n    const header = dataSource.header.toJs();\n\n    const xdataArray = [].slice.call(xdata);\n    sourceData = xdataArray.map((xi: number, i: number) => {\n      return [xi, ydata[i]];\n    });\n\n    // create dummy baseline array and updated the value if fitting has done\n    const baselineData = xdataArray.map((xi: number, i: number) => {\n      return [xi, 0.0];\n    });\n\n    if (isBaselineFitted === true) {\n      baselineData.forEach((item: number[], i: number) => {\n        item[1] = baselineFit[i];\n      });\n    }\n\n    // create subtracted data if the option is selected\n    if (subtraction === true) {\n      const subtractedData = sourceData.map(\n        (item: number[], idx: number) => {\n          return [item[0], item[1] - baselineData[idx][1]]\n        }\n      )\n      options.series = [\n        {\n          name: 'Observation - Baseline',\n          type: 'scatter',\n          data: subtractedData,\n          findNearestPointBy: 'xy',\n        },\n      ];\n    }\n    else {\n      options.series = [\n        {\n          name: 'Observation',\n          type: 'scatter',\n          lineWidth: 2,\n          data: sourceData,\n          allowPointSelect: isSelecting,\n          findNearestPointBy: 'xy',\n        },\n        // {\n        //   name: \"Baseline\",\n        //   type: \"scatter\",\n        //   data: props.baselinePoints,\n        //   dragDrop: {\n        //     draggableX: true,\n        //     draggableY: true\n        //   },\n        // },\n      ];\n\n      // add another label if we plot both original data and baseline\n      if (isBaselineFitted === true) {\n        options.series.push({\n          name: 'Baseline fitting',\n          type: 'line',\n          data: baselineData,\n          allowPointSelect: false,\n          colorIndex: 3,\n        })\n      }\n      console.log(\"series\", options.series);\n    }\n\n    if (gaussianFit) {\n      const gaussian = xdataArray.map((xi: number, i: number) => {\n        return [xi, 0.0];\n      });\n      gaussian.forEach((item: number[], i: number) => {\n        item[1] = gaussianFit[i];\n      });\n      options.series.push(\n        {\n          name: 'Gaussian',\n          type: 'line',\n          data: gaussian,\n          findNearestPointBy: 'xy',\n          colorIndex: 5,\n        },\n      );\n    }\n\n    if (gaussianGuess) {\n      const series = gaussianGuess.map((guess: number[], index: number) => {\n        const [xmin, xmax, ymin, ymax] = guess;\n        const data: Highcharts.SeriesOptionsType = {\n          name: `Peak ${index + 1}`,\n          type: 'polygon',\n          data: [[xmin, ymin], [xmax, ymin], [xmax, ymax], [xmin, ymax]],\n          color: 'green',\n          opacity: 0.5\n        }\n        return data;\n      });\n      if (series) options.series = [...options.series, ...series];\n    }\n\n    // options.series = [\n    //   {\n    //     name: \"Observation\",\n    //     type: 'line',\n    //     data: sourceData,\n    //     allowPointSelect: selectMode,\n    //   },\n    //   {\n    //     name: \"Baseline\",\n    //     type: \"scatter\",\n    //     data: baselinePoints,\n    //     dragDrop: {\n    //       draggableX: true,\n    //       draggableY: true\n    //     },\n    //   }\n    // ];\n\n    const subtitle = `${header.get(\"CTYPE2\")}: ${toSciSymbol(header.get(\"CRVAL2\"))}, ${header.get(\"CTYPE3\")}: ${toSciSymbol(header.get(\"CRVAL3\"))}`;\n\n    options.title = {\n      text: fileName\n    };\n\n    options.subtitle = {\n      text: subtitle\n    };\n\n    const xAxis = {\n      title: {\n        text: xdisplayUnit,\n      },\n      // labels: {\n      //   format: '{value:.2f}',\n      // }\n    };\n    const yAxis = {\n      title: {\n        text: header.get('BUNIT'),\n      }\n    };\n\n    options.xAxis = xAxis;\n    options.yAxis = yAxis;\n\n  }\n\n  if (isSelecting === true && options.chart) {\n    options.chart.zoomType = 'xy';\n    options.chart.renderTo = chart?.container;\n    options.chart.events = {\n      selection: selectionFunction,\n      click: unselectByClick,\n    };\n  }\n  else if (options.chart) {\n    options.chart.zoomType = 'x';\n    options.chart.events = {\n      selection: undefined,\n      click: undefined,\n      render: undefined,\n    }\n  }\n\n  console.log(\"options\", options)\n\n  const getCursorPos = (event: any) => {\n    let xPos = 0.0;\n    let yPos = 0.0;\n    if (chart) {\n      const e = chart.pointer.normalize(event);\n      const x = e.chartX - chart.plotLeft;\n      const y = e.chartY - chart.plotTop;\n      // const top = chart.container.offsetTop;\n      // const left = chart.container.offsetLeft;\n      // const x = event.clientX - chart.plotLeft - left;\n      // const y = event.clientY - chart.plotTop - top;\n      if (x >= 0 && y >= 0 && x <= chart.chartWidth && y <= chart.chartHeight) {\n        // console.log(chart.xAxis[0].toValue(x, true));\n        // console.log(chart.yAxis[0].toValue(chart.plotHeight - y, true));\n        // setCursorX(chart.xAxis[0].toValue(x, true));\n        // setCursorY(chart.yAxis[0].toValue(y, true));\n        xPos = chart.xAxis[0].toValue(x, true);\n        yPos = chart.yAxis[0].toValue(y, true);\n      }\n      // console.log(event);\n    }\n    // console.log(event);\n    return { xPos, yPos };\n  }\n\n  const handleMouseMove = (event: any) => {\n    const { xPos, yPos } = getCursorPos(event);\n    dispatch(setPosition([xPos, yPos]));\n    // setCursorX(xPos);\n    // setCursorY(yPos);\n  };\n\n  return (\n    <div>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={options}\n        ref={chartComponentRef}\n        containerProps={{\n          onMouseMove: handleMouseMove,\n          // onDoubleClick: handleDoubleClick,\n        }}\n      />\n      <Toolbar\n        unit={unit}\n        setUnit={setUnit}\n        dataSource={dataSource}\n        unSelectAllPoints={unSelectAllPoints}\n      />\n    </div>\n  );\n});\n\nconst Toolbar = (props: any) => {\n  const dispatch = useDispatch();\n  const drag = useSelector((state: RootState) => state.cursor.drag);\n  const baselinePoints = useSelector((state: RootState) => state.baseline.dataPoints);\n  const baselineFit = useSelector((state: RootState) => state.baseline.fitValues);\n  const subtraction = useSelector((state: RootState) => state.baseline.subtraction);\n  const isBaselineFitted = baselineFit.length > 0;\n  const xdata = baselinePoints.map((item: number[]) => { return item[0] });\n  const ydata = baselinePoints.map((item: number[]) => { return item[1] });\n\n  const order = useSelector((state: RootState) => state.gaussian.order);\n  const isFitting = useSelector((state: RootState) => state.gaussian.isFitting);\n  const gaussianGuess = useSelector((state: RootState) => state.gaussian.guess);\n  const dataSource = props.dataSource;\n  const unit = props.unit;\n  const setUnit = props.setUnit;\n\n  const unSelectAllPoints = props.unSelectAllPoints;\n\n  const fitBaseline = (x: number[], y: number[]) => {\n    const result = dataSource?.fit_baseline(x, y, unit).toJs();\n    const fit = [].slice.call(result);\n    dispatch(setFitValues(fit));\n  }\n  const fitGaussian = (nGaussian: number) => {\n    const result = dataSource?.fit_gaussian(unit, nGaussian, gaussianGuess).toJs();\n    const fit = [].slice.call(result);\n    dispatch(setGaussianFit(fit));\n  }\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <ButtonGroup>\n        <Tooltip2\n          content=\"Cursor action: drag to zoom\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton\n            icon=\"zoom-in\"\n            small={true}\n            active={drag === \"zoom\"}\n            onClick={() => { dispatch(setDrag(\"zoom\")) }}\n          />\n        </Tooltip2>\n        <Tooltip2\n          content=\"Cursor action: select baseline points\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton\n            icon=\"widget-button\"\n            small={true}\n            active={drag === \"baseline\"}\n            disabled={subtraction}\n            onClick={() => { dispatch(setDrag(\"baseline\")) }}\n          />\n        </Tooltip2>\n        <Tooltip2\n          content=\"Cursor action: select gaussian peak ranges\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton\n            icon=\"widget\"\n            small={true}\n            active={drag === \"gaussian\"}\n            disabled={!isBaselineFitted || !subtraction}\n            onClick={() => { dispatch(setDrag(\"gaussian\")) }}\n          />\n        </Tooltip2>\n      </ButtonGroup>\n      <Divider />\n      <Tooltip2\n        content=\"Subtraction baseline\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"bring-data\"\n          small={true}\n          active={subtraction}\n          onClick={() => {\n            dispatch(setSubtraction(!subtraction));\n            dispatch(setDrag(\"zoom\"));\n          }}\n        />\n      </Tooltip2>\n      <Tooltip2\n        content=\"Fit baseline\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"regression-chart\"\n          small={true}\n          disabled={!baselinePoints.length}\n          onClick={() => { fitBaseline(xdata, ydata) }}\n        />\n      </Tooltip2>\n      <Tooltip2\n        content=\"Remove all baseline data\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"delete\"\n          small={true}\n          onClick={() => {\n            unSelectAllPoints();\n            dispatch(setDataPoints([]));\n            fitBaseline([], []);\n          }}\n        />\n      </Tooltip2>\n      <Divider />\n      <Tooltip2\n        className={Classes.TOOLTIP_INDICATOR}\n        content=\"Fit Gaussian\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"timeline-bar-chart\"\n          small={true}\n          active={isFitting}\n          disabled={!baselinePoints.length || !subtraction}\n          onClick={() => {\n            if (isFitting) {\n              dispatch(setGaussianFit([]));\n            }\n            else {\n              fitGaussian(order);\n            }\n            dispatch(setIsFitting(!isFitting))\n          }}\n        />\n      </Tooltip2>\n      <Popover2\n        content={\n          <NumericInput\n            style={{ width: 30 }}\n            value={order}\n            min={0}\n            onValueChange={(value) => {\n              dispatch(setOrder(value));\n              if (isFitting) fitGaussian(value);\n            }}\n          />\n        }\n      >\n        <Tooltip2\n          content=\"Number of Gaussian peaks\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton text={order} small={true} />\n        </Tooltip2>\n      </Popover2>\n      <Tooltip2\n        content=\"Remove all gaussian data\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"delete\"\n          small={true}\n          onClick={() => {\n            dispatch(setIsFitting(false));\n            dispatch(setGaussianGuess([]));\n            dispatch(setGaussianFit([]));\n          }}\n        />\n      </Tooltip2>\n\n      <FormGroup style={{ marginLeft: \"auto\", height: 10 }} label=\"x-axis unit:\" inline={true}>\n        <HTMLSelect value={unit} minimal={true} onChange={(e) => { setUnit(e.target.value) }}>\n          <option value=\"freq\">Frequency (Hz)</option>\n          <option value=\"freq-k\">Frequency (kHz)</option>\n          <option value=\"freq-m\">Frequency (MHz)</option>\n          <option value=\"freq-g\">Frequency (GHz)</option>\n          <option value=\"chan\">Channel</option>\n          <option value=\"vel\">Velocity (km/s)</option>\n        </HTMLSelect>\n      </FormGroup>\n    </div>\n  )\n}\n\nexport default Viewer;","export default __webpack_public_path__ + \"static/media/salsasource.74c361a6.py\";","import { useState, useEffect, useRef } from 'react';\nimport { Alignment, Button, Card, Icon, Label, Navbar, NavbarDivider, NavbarGroup, NavbarHeading, Tabs, Tab } from '@blueprintjs/core';\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport Viewer from './components/Viewer';\nimport salsaSourceDef from './python/salsasource.py';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from './redux/store'\nimport { toSciSymbol } from './Helper';\n\nimport './App.css';\n\ndeclare global { // <- [reference](https://stackoverflow.com/a/56458070/11542903)\n  interface Window {\n    pyodide: any;\n    jsarray: any;\n    loadPyodide: any;\n    // languagePluginLoader: any;\n  }\n}\n\nconst pyodideInstance = async () => {\n  const pyodide = await window.loadPyodide({\n    indexURL: \"https://cdn.jsdelivr.net/pyodide/v0.18.1/full/\"\n  });\n  await pyodide.loadPackage([\"astropy\", \"scipy\"]);\n  // await pyodide.loadPackage(\"astropy\")\n  return pyodide\n}\n\nconst runScript = async (pyodide: any, code: string) => {\n  await pyodide.runPythonAsync(code)\n  const content = pyodide.globals.get(\"salsa\")\n  console.log(\"globals\", content)\n\n  return content\n}\n\nfunction App() {\n  const dispatch = useDispatch();\n  const pyodideObj = useRef<any>(null);\n  const [pyodideLoaded, setPyodideLoaded] = useState(false);\n  const [newFileName, setNewfileName] = useState(\"\");\n  const [unit, setUnit] = useState(\"freq\");\n  const [dataSource, setDataSource] = useState<any>();\n\n  useEffect(() => {\n    async function init() {\n      if (!pyodideLoaded) {\n        pyodideObj.current = await pyodideInstance();\n        setPyodideLoaded(true);\n      } else {\n        console.log(\"no duplicate reload to avoid pyodide error\")\n      }\n    }\n    init()\n  });\n\n  const getData = async (file: File) => {\n    const script = await (await fetch(salsaSourceDef)).text();\n    // console.log(\"script text\", scriptText)\n    const content = await runScript(pyodideObj.current, script);\n    // console.log(\"content\", content)\n    // console.log(\"header\", content.header.toJs())\n    // const xdata = content.axisdata(1).toJs()\n    // const ydata = content.rawdata.toJs()[0][0]\n\n    setNewfileName(file.name);\n    setDataSource(content);\n  }\n\n  const readFile = (file: File) => {\n    if (file) {\n      console.log(\"processing file:\", file)\n      const reader = new FileReader()\n\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        window.jsarray = new Float32Array(reader.result as ArrayBuffer);\n        getData(file);\n      }\n      reader.readAsArrayBuffer(file)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar>\n        <NavbarGroup align={Alignment.LEFT}>\n          <NavbarHeading>SalsaTS</NavbarHeading>\n          <NavbarDivider />\n          <Button disabled={!pyodideLoaded} minimal={true}>\n            <label htmlFor=\"input\">\n              <input type=\"file\" id=\"input\" hidden onChange={(e: any) => { readFile(e.target.files[0]) }} />\n              <Icon icon=\"document\" /> Upload\n            </label>\n          </Button>\n        </NavbarGroup>\n        <NavbarGroup align={Alignment.RIGHT}>\n          <Button\n            icon=\"help\"\n            text=\"Help\"\n            minimal={true}\n            onClick={(e) => {\n              e.preventDefault();\n              window.open('https://github.com/appolloford/salsa-ts/wiki', '_blank', 'noopener,noreferrer');\n            }}\n          />\n        </NavbarGroup>\n      </Navbar>\n      <Viewer\n        fileName={newFileName}\n        dataSource={dataSource}\n        unit={unit}\n        setUnit={setUnit}\n      />\n      <div style={{ display: \"flex\" }}>\n        <div style={{ flex: 1 }}>\n          <Tabs>\n            <Tab\n              id=\"cursorpanel\"\n              title=\"Cursor Information\"\n              panel={\n                <CursorInforPanel />\n              }\n            />\n            <Tab\n              id=\"baselinepoints\"\n              title=\"Selected Baseline Points\"\n              panel={\n                <BaselinePointTable />\n              }\n            />\n            <Tab\n              id=\"gaussianranges\"\n              title=\"Selected Gaussian Ranges\"\n              panel={\n                <GaussianGuessTable />\n              }\n            />\n          </Tabs>\n        </div>\n      </div>\n    </div >\n  );\n}\n\nconst CursorInforPanel = (props: any) => {\n\n  const position = useSelector((state: RootState) => state.cursor.position);\n  return (\n    <div style={{ textAlign: 'left' }}>\n      <Label>Position: ({toSciSymbol(position[0])}, {toSciSymbol(position[1])})</Label>\n    </div>\n  )\n}\n\n\nconst BaselinePointTable = (props: any) => {\n  const baselinePoints = useSelector((state: RootState) => state.baseline.dataPoints)\n  const pointX = (rowIndex: number) => (\n    <Cell>{`${baselinePoints[rowIndex] ? (toSciSymbol(baselinePoints[rowIndex][0])) : 0.0}`}</Cell>\n  );\n  const pointY = (rowIndex: number) => (\n    <Cell>{`${baselinePoints[rowIndex] ? (toSciSymbol(baselinePoints[rowIndex][1])) : 0.0}`}</Cell>\n  );\n  return (\n    <Card style={{ display: \"block\", overflow: \"auto\", width: 600, height: 150 }}>\n      <Table2 numRows={baselinePoints.length} enableGhostCells={true}>\n        <Column name=\"X coordinate\" cellRenderer={pointX} />\n        <Column name=\"Y coordinate\" cellRenderer={pointY} />\n      </Table2>\n    </Card>\n  )\n}\n\nconst GaussianGuessTable = (props: any) => {\n  const gaussianGuess = useSelector((state: RootState) => state.gaussian.guess);\n\n  const rangeX = (rowIndex: number) => (\n    <Cell>\n      ({`${gaussianGuess[rowIndex] ? (toSciSymbol(gaussianGuess[rowIndex][0])) : 0.0}`},\n      {` ${gaussianGuess[rowIndex] ? (toSciSymbol(gaussianGuess[rowIndex][1])) : 0.0}`})\n    </Cell>\n  );\n  const rangeY = (rowIndex: number) => (\n    <Cell>\n      ({`${gaussianGuess[rowIndex] ? (toSciSymbol(gaussianGuess[rowIndex][2])) : 0.0}`},\n      {` ${gaussianGuess[rowIndex] ? (toSciSymbol(gaussianGuess[rowIndex][3])) : 0.0}`})\n    </Cell>\n  );\n  return (\n    <Card style={{ display: \"block\", overflow: \"auto\", width: 600, height: 150 }}>\n      <Table2 numRows={gaussianGuess.length} enableGhostCells={true} columnWidths={[300, 200]}>\n        <Column name=\"X range\" cellRenderer={rangeX} />\n        <Column name=\"Y range\" cellRenderer={rangeY} />\n      </Table2>\n    </Card>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport cursorReducer from './cursorSlice'\nimport baselineReducer from './baselineSlice'\nimport gaussianReducer from './gaussianSlice'\n\nexport const store = configureStore({\n  reducer: {\n    cursor: cursorReducer,\n    baseline: baselineReducer,\n    gaussian: gaussianReducer,\n  },\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}