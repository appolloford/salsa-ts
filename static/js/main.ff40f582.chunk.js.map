{"version":3,"sources":["redux/cursorSlice.tsx","redux/baselineSlice.tsx","redux/gaussianSlice.tsx","Helper.tsx","components/Toolbar.tsx","components/Viewer.tsx","python/salsasource.py","App.tsx","reportWebVitals.ts","redux/store.tsx","index.tsx"],"names":["cursorSlice","createSlice","name","initialState","position","drag","reducers","setPosition","state","action","payload","setDrag","actions","baselineSlice","dataPoints","fitValues","subtraction","showBaselineTable","setDataPoints","setFitValues","setSubtraction","setShowBaselineTable","GaussianSlice","order","isFitting","guess","params","fit","showGaussianTable","setOrder","setIsFitting","setGaussianGuess","setGaussianFit","setShowGaussianTable","toSciSymbol","num","digits","toFixed","toExponential","split","map","item","Number","coeff","exp","Toolbar","props","dispatch","useDispatch","useSelector","cursor","baselinePoints","baseline","baselineFit","isBaselineFitted","length","xdata","ydata","gaussian","gaussianGuess","dataSource","unit","setUnit","unSelectAllPoints","fitBaseline","x","y","result","fit_baseline","toJs","slice","call","fitGaussian","xmin","xmax","ymin","ymax","tmp1","convertfreq","tmp2","fit_gaussian","style","display","content","Position","TOP_LEFT","minimal","icon","small","active","onClick","disabled","className","Classes","TOOLTIP_INDICATOR","width","value","min","onValueChange","text","marginLeft","height","label","inline","onChange","e","target","HC_more","Highcharts","HC_exporting","require","Viewer","memo","xdisplayUnit","gaussianFit","cardHeight","chartComponentRef","useRef","chart","current","fileName","options","zoomType","tooltip","enabled","plotOptions","series","enableMouseTracking","followPointer","events","click","filter","index","point","sourceData","axisdata","rawdata","header","xdataArray","xi","i","baselineData","forEach","subtractedData","idx","type","data","findNearestPointBy","lineWidth","allowPointSelect","push","colorIndex","console","log","xmin2","xmax2","color","opacity","subtitle","get","title","xAxis","yAxis","renderTo","container","selection","points","max","select","getSelectedPoints","convert2freq","guess2","g","undefined","render","highcharts","ref","containerProps","onMouseMove","event","xPos","yPos","pointer","normalize","chartX","plotLeft","chartY","plotTop","chartWidth","chartHeight","toValue","getCursorPos","isOpen","BaselineTable","overflow","numRows","enableGhostCells","columnWidths","cellRenderer","rowIndex","GaussianTable","pyodideInstance","a","window","loadPyodide","indexURL","pyodide","loadPackage","runScript","code","runPythonAsync","globals","App","pyodideObj","useState","pyodideLoaded","setPyodideLoaded","newFileName","setNewfileName","setDataSource","drawerstate","setDrawerState","useEffect","init","getData","file","fetch","salsaSourceDef","script","Array","from","key","align","Alignment","LEFT","htmlFor","id","hidden","reader","FileReader","onabort","onerror","onload","jsarray","Float32Array","readAsArrayBuffer","readFile","files","RIGHT","preventDefault","open","onClose","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","cursorReducer","baselineReducer","gaussianReducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff40f582.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface CursorState {\n  position: number[]\n  drag: string\n}\n\nconst initialState: CursorState = {\n  position: [0, 0],\n  drag: \"zoom\"\n}\n\nexport const cursorSlice = createSlice({\n  name: 'cursor',\n  initialState,\n  reducers: {\n    setPosition: (state, action: PayloadAction<number[]>) => {\n      state.position = action.payload\n    },\n    setDrag: (state, action: PayloadAction<string>) => {\n      state.drag = action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setPosition, setDrag } = cursorSlice.actions\n\nexport default cursorSlice.reducer","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface BaselineState {\n  dataPoints: number[][]\n  fitValues: number[]\n  subtraction: boolean\n  showBaselineTable: boolean\n}\n\nconst initialState: BaselineState = {\n  dataPoints: [],\n  fitValues: [],\n  subtraction: false,\n  showBaselineTable: false\n}\n\nexport const baselineSlice = createSlice({\n  name: 'baseline',\n  initialState,\n  reducers: {\n    setDataPoints: (state, action: PayloadAction<number[][]>) => {\n      state.dataPoints = action.payload\n    },\n    setFitValues: (state, action: PayloadAction<number[]>) => {\n      state.fitValues = action.payload\n    },\n    setSubtraction: (state, action: PayloadAction<boolean>) => {\n      state.subtraction = action.payload\n    },\n    setShowBaselineTable: (state, action: PayloadAction<boolean>) => {\n      state.showBaselineTable = action.payload\n    }\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setDataPoints, setFitValues, setSubtraction, setShowBaselineTable } = baselineSlice.actions\n\nexport default baselineSlice.reducer","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface GaussianState {\n  order: number\n  isFitting: boolean\n  guess: number[][]\n  params: number[][]\n  fit: number[]\n  showGaussianTable: boolean\n}\n\nconst initialState: GaussianState = {\n  order: 0,\n  isFitting: false,\n  guess: [],\n  params: [],\n  fit: [],\n  showGaussianTable: false\n}\n\nexport const GaussianSlice = createSlice({\n  name: 'gaussian',\n  initialState,\n  reducers: {\n    setOrder: (state, action: PayloadAction<number>) => {\n      state.order = action.payload\n    },\n    setIsFitting: (state, action: PayloadAction<boolean>) => {\n      state.isFitting = action.payload\n    },\n    setGaussianGuess: (state, action: PayloadAction<number[][]>) => {\n      state.guess = action.payload\n    },\n    setGaussianFit: (state, action: PayloadAction<number[]>) => {\n      state.fit = action.payload\n    },\n    setShowGaussianTable: (state, action: PayloadAction<boolean>) => {\n      state.showGaussianTable = action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setOrder, setIsFitting, setGaussianGuess, setGaussianFit, setShowGaussianTable } = GaussianSlice.actions\n\nexport default GaussianSlice.reducer","export const toSciSymbol = (num: number, digits: number = 3) => {\n  if (!num) {\n    num = 0.0;\n    return num.toFixed(digits);\n  }\n  const [coeff, exp] = num.toExponential().split('e').map(item => Number(item));\n  return exp === 0 ? `${coeff.toFixed(digits)}` : `${coeff.toFixed(digits)}x10^${exp}`;\n}","import { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../redux/store';\nimport { setDrag } from '../redux/cursorSlice';\nimport { setDataPoints, setFitValues, setSubtraction, setShowBaselineTable } from '../redux/baselineSlice';\nimport { setOrder, setIsFitting, setGaussianGuess, setGaussianFit, setShowGaussianTable } from '../redux/gaussianSlice';\nimport { AnchorButton, Button, Classes, ButtonGroup, Divider, FormGroup, HTMLSelect, NumericInput, Position } from '@blueprintjs/core';\nimport { Popover2, Tooltip2 } from \"@blueprintjs/popover2\";\nimport { toSciSymbol } from \"../Helper\";\n\nconst Toolbar = (props: any) => {\n  const dispatch = useDispatch();\n  const position = useSelector((state: RootState) => state.cursor.position);\n  const drag = useSelector((state: RootState) => state.cursor.drag);\n  const baselinePoints = useSelector((state: RootState) => state.baseline.dataPoints);\n  const baselineFit = useSelector((state: RootState) => state.baseline.fitValues);\n  const subtraction = useSelector((state: RootState) => state.baseline.subtraction);\n  const isBaselineFitted = baselineFit.length > 0;\n  const xdata = baselinePoints.map((item: number[]) => { return item[0] });\n  const ydata = baselinePoints.map((item: number[]) => { return item[1] });\n\n  const order = useSelector((state: RootState) => state.gaussian.order);\n  const isFitting = useSelector((state: RootState) => state.gaussian.isFitting);\n  const gaussianGuess = useSelector((state: RootState) => state.gaussian.guess);\n  const dataSource = props.dataSource;\n  const unit = props.unit;\n  const setUnit = props.setUnit;\n\n  const unSelectAllPoints = props.unSelectAllPoints;\n\n  const fitBaseline = (x: number[], y: number[]) => {\n    const result = dataSource?.fit_baseline(x, y, unit).toJs();\n    const fit = [].slice.call(result);\n    dispatch(setFitValues(fit));\n  }\n  const fitGaussian = (order: number) => {\n    const guess = gaussianGuess.map((guess: number[]) => {\n      const [xmin, xmax, ymin, ymax] = guess;\n      const tmp1 = dataSource?.convertfreq(xmin, unit);\n      const tmp2 = dataSource?.convertfreq(xmax, unit);\n      const xmin2 = tmp1 <= tmp2 ? tmp1 : tmp2;\n      const xmax2 = tmp1 <= tmp2 ? tmp2 : tmp1;\n      return [xmin2, xmax2, ymin, ymax];\n    });\n    const result = dataSource?.fit_gaussian(unit, order, guess).toJs();\n    const fit = [].slice.call(result);\n    dispatch(setGaussianFit(fit));\n  }\n\n  const showBaselineTable = useSelector((state: RootState) => state.baseline.showBaselineTable);\n  const showGaussianTable = useSelector((state: RootState) => state.gaussian.showGaussianTable);\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <ButtonGroup>\n        <Tooltip2\n          content=\"Cursor action: drag to zoom\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton\n            icon=\"zoom-in\"\n            small={true}\n            active={drag === \"zoom\"}\n            onClick={() => { dispatch(setDrag(\"zoom\")) }}\n          />\n        </Tooltip2>\n        <Tooltip2\n          content=\"Cursor action: select baseline points\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton\n            icon=\"widget-button\"\n            small={true}\n            active={drag === \"baseline\"}\n            disabled={subtraction}\n            onClick={() => { dispatch(setDrag(\"baseline\")) }}\n          />\n        </Tooltip2>\n        <Tooltip2\n          content=\"Cursor action: select gaussian peak ranges\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton\n            icon=\"widget\"\n            small={true}\n            active={drag === \"gaussian\"}\n            disabled={!isBaselineFitted || !subtraction}\n            onClick={() => { dispatch(setDrag(\"gaussian\")) }}\n          />\n        </Tooltip2>\n      </ButtonGroup>\n      <Divider />\n      <Tooltip2\n        content=\"Subtraction baseline\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"bring-data\"\n          small={true}\n          active={subtraction}\n          onClick={() => {\n            dispatch(setSubtraction(!subtraction));\n            dispatch(setDrag(\"zoom\"));\n          }}\n        />\n      </Tooltip2>\n      <Tooltip2\n        content=\"Fit baseline\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"regression-chart\"\n          small={true}\n          disabled={!baselinePoints.length}\n          onClick={() => { fitBaseline(xdata, ydata) }}\n        />\n      </Tooltip2>\n      <Tooltip2\n        content=\"Show baseline table\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"th\"\n          small={true}\n          onClick={() => { dispatch(setShowBaselineTable(!showBaselineTable)) }}\n        />\n      </Tooltip2>\n      <Tooltip2\n        content=\"Remove all baseline data\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"delete\"\n          small={true}\n          onClick={() => {\n            unSelectAllPoints();\n            dispatch(setDataPoints([]));\n            fitBaseline([], []);\n          }}\n        />\n      </Tooltip2>\n      <Divider />\n      <Tooltip2\n        className={Classes.TOOLTIP_INDICATOR}\n        content=\"Fit Gaussian\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"timeline-bar-chart\"\n          small={true}\n          active={isFitting}\n          disabled={!baselinePoints.length || !subtraction}\n          onClick={() => {\n            if (isFitting) {\n              dispatch(setGaussianFit([]));\n            }\n            else {\n              fitGaussian(order);\n            }\n            dispatch(setIsFitting(!isFitting))\n          }}\n        />\n      </Tooltip2>\n      <Popover2\n        content={\n          <NumericInput\n            style={{ width: 30 }}\n            value={order}\n            min={0}\n            onValueChange={(value) => {\n              dispatch(setOrder(value));\n              if (isFitting) fitGaussian(value);\n            }}\n          />\n        }\n      >\n        <Tooltip2\n          content=\"Number of Gaussian peaks\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton text={order} small={true} />\n        </Tooltip2>\n      </Popover2>\n      <Tooltip2\n        content=\"Show gaussian table\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"th\"\n          small={true}\n          onClick={() => { dispatch(setShowGaussianTable(!showGaussianTable)) }}\n        />\n      </Tooltip2>\n      <Tooltip2\n        content=\"Remove all gaussian data\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"delete\"\n          small={true}\n          onClick={() => {\n            dispatch(setIsFitting(false));\n            dispatch(setGaussianGuess([]));\n            dispatch(setGaussianFit([]));\n          }}\n        />\n      </Tooltip2>\n\n      {/* <Label>Position: ({toSciSymbol(position[0])}, {toSciSymbol(position[1])})</Label> */}\n      <Button style={{ marginLeft: \"auto\", height: 10 }} small={true} minimal={true} disabled={true} >\n        (x, y) = ({toSciSymbol(position[0])}, {toSciSymbol(position[1])})\n      </Button>\n      {/* <Text style={{ marginLeft: \"auto\", height: 10 }} >(x, y) = ({toSciSymbol(position[0])}, {toSciSymbol(position[1])})</Text> */}\n      {/* (x, y) = ({toSciSymbol(position[0])}, {toSciSymbol(position[1])}) */}\n\n      <FormGroup style={{ marginLeft: \"auto\", height: 10 }} label=\"x-axis unit:\" inline={true}>\n        <HTMLSelect value={unit} minimal={true} onChange={(e) => { setUnit(e.target.value) }}>\n          <option value=\"freq\">Frequency (Hz)</option>\n          <option value=\"freq-k\">Frequency (kHz)</option>\n          <option value=\"freq-m\">Frequency (MHz)</option>\n          <option value=\"freq-g\">Frequency (GHz)</option>\n          <option value=\"chan\">Channel</option>\n          <option value=\"vel\">Velocity (km/s)</option>\n        </HTMLSelect>\n      </FormGroup>\n    </div>\n  )\n}\n\nexport default Toolbar;","import { useEffect, useRef, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../redux/store';\nimport { setDrag, setPosition } from '../redux/cursorSlice';\nimport { setDataPoints, setFitValues, setSubtraction, setShowBaselineTable } from '../redux/baselineSlice';\nimport { setOrder, setIsFitting, setGaussianGuess, setGaussianFit, setShowGaussianTable } from '../redux/gaussianSlice';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport HC_more from 'highcharts/highcharts-more';\nimport HC_exporting from 'highcharts/modules/exporting';\nimport { Card, Collapse, Divider } from '@blueprintjs/core';\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport { toSciSymbol } from \"../Helper\";\nimport Toolbar from './Toolbar';\n\nHC_more(Highcharts);\nHC_exporting(Highcharts);\nrequire(\"highcharts/modules/draggable-points\")(Highcharts);\nrequire(\"highcharts/modules/accessibility\")(Highcharts);\n\n\nconst Viewer = memo((props: any) => {\n\n  const dispatch = useDispatch();\n  const drag = useSelector((state: RootState) => state.cursor.drag);\n\n  const baselineFit = useSelector((state: RootState) => state.baseline.fitValues);\n  const subtraction = useSelector((state: RootState) => state.baseline.subtraction);\n  const showBaselineTable = useSelector((state: RootState) => state.baseline.showBaselineTable);\n  const isBaselineFitted = baselineFit.length > 0;\n\n  const order = useSelector((state: RootState) => state.gaussian.order);\n  const isFitting = useSelector((state: RootState) => state.gaussian.isFitting);\n  const gaussianGuess = useSelector((state: RootState) => state.gaussian.guess);\n  const gaussianFit = useSelector((state: RootState) => state.gaussian.fit);\n  const showGaussianTable = useSelector((state: RootState) => state.gaussian.showGaussianTable);\n\n  const cardHeight = 250 / (Number(showBaselineTable) + Number(showGaussianTable));\n\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const chart = chartComponentRef.current?.chart;\n\n  const fileName = props.fileName;\n  const dataSource = props.dataSource;\n  const unit = props.unit;\n  const setUnit = props.setUnit;\n\n  const fitGaussian = (order: number, guess: number[][]) => {\n    const guess2 = guess.map((g: number[]) => {\n      const [xmin, xmax, ymin, ymax] = g;\n      const tmp1 = dataSource?.convertfreq(xmin, unit);\n      const tmp2 = dataSource?.convertfreq(xmax, unit);\n      const xmin2 = tmp1 <= tmp2 ? tmp1 : tmp2;\n      const xmax2 = tmp1 <= tmp2 ? tmp2 : tmp1;\n      return [xmin2, xmax2, ymin, ymax];\n    });\n    const result = dataSource?.fit_gaussian(unit, order, guess2).toJs();\n    const fit = [].slice.call(result);\n    dispatch(setGaussianFit(fit));\n  }\n\n  const selectPoints = (e: any) => {\n\n    // const chart = chartComponentRef.current?.chart;\n\n    console.log(e)\n    console.log(chart)\n    console.log(\"chart option\", chart?.options)\n\n    if (chart?.series) {\n      chart.series.forEach(\n        (series: any) => {\n          // check the series is selectable, don't select the points on fitting line\n          if (series.options.allowPointSelect === true) {\n            series?.points.forEach(\n              (point: any) => {\n                if (point.x >= e.xAxis[0].min && point.x <= e.xAxis[0].max &&\n                  point.y >= e.yAxis[0].min && point.y <= e.yAxis[0].max) {\n                  point.select(true, true);\n                }\n              }\n            )\n          }\n        }\n      )\n    }\n\n    const data = chart?.getSelectedPoints().map(\n      (point) => { return [point.x || 0.0, point.y || 0.0] }\n    ) || [];\n\n    dispatch(setDataPoints(data));\n\n    // Fire a custom event\n    // console.log(\"highchart\", Highcharts);\n    // Highcharts.fireEvent(chart, 'selectedpoints', { points: chart?.getSelectedPoints() });\n\n    return false; // Don't zoom\n  }\n\n  const unSelectAllPoints = () => {\n    const points = chart?.getSelectedPoints();\n    if (points?.length && points.length > 0) {\n      points.forEach((point) => {\n        point.select(false);\n      })\n    }\n    // dispatch(setDataPoints([]));\n  }\n\n  const selectRange = (e: any) => {\n\n    // const chart = chartComponentRef.current?.chart;\n\n    // console.log(e)\n    // console.log(chart)\n    // console.log(\"chart option\", chart?.options)\n\n    const xmin = dataSource?.convert2freq(e.xAxis[0].min, unit);\n    const xmax = dataSource?.convert2freq(e.xAxis[0].max, unit);\n    const ymin = e.yAxis[0].min;\n    const ymax = e.yAxis[0].max;\n\n    const guess = [xmin, xmax, ymin, ymax];\n    dispatch(setGaussianGuess([...gaussianGuess, guess]));\n\n    if (isFitting) {\n      fitGaussian(order, [...gaussianGuess, guess]);\n    }\n\n    // Fire a custom event\n    // console.log(\"highchart\", Highcharts);\n    // Highcharts.fireEvent(chart, 'selectedpoints', { points: chart?.getSelectedPoints() });\n\n    return false; // Don't zoom\n  }\n\n  function unselectByClick() {\n    const points = chart?.getSelectedPoints();\n    if (points?.length && points.length > 0) {\n      points.forEach((point) => {\n        point.select(false);\n      })\n    }\n    dispatch(setDataPoints([]));\n  }\n\n  // const setCursorX = props.setCursorX;\n  // const setCursorY = props.setCursorY;\n\n  // const addBaselinePoints = (point: Array<number>) => {\n  //   setBaselinePoints([...baselinePoints, point]);\n  // };\n\n  // TODO: update table when drag and drop\n  // const updateBaselinePoints = (oldPoint: Array<number>, newPoint: Array<number>) => {\n  //   // console.log(\"update\", oldPoint, newPoint);\n  //   // const test = baselinePoints.map((x, i) => [i, x]);\n  //   // console.log(\"test\", test)\n  //   // const targetIdx = baselinePoints.filter((ele) => {\n  //   //   console.log(\"filter\", ele)\n  //   //   return ele[0] === oldPoint[0] && ele[1] === oldPoint[1]\n  //   // });\n  //   // console.log(\"idx:\", targetIdx);\n  //   console.log(\"a\", baselinePoints);\n  //   setBaselinePoints([...baselinePoints]);\n  //   console.log(\"b\", baselinePoints);\n  //   // setBaselinePoints(baselinePoints[baselinePoints.map((x, i) => [i, x]).filter(\n  //   //   x => x[1] == point)[0][0]] = point);\n  // }\n\n  let xdisplayUnit;\n\n  if (unit === \"freq-k\") {\n    xdisplayUnit = \"kHz\";\n  } else if (unit === \"freq-m\") {\n    xdisplayUnit = \"MHz\";\n  } else if (unit === \"freq-g\") {\n    xdisplayUnit = \"GHz\";\n  } else if (unit === \"chan\") {\n    xdisplayUnit = \"Channel\";\n  } else if (unit === \"vel\") {\n    xdisplayUnit = \"Velocity (km/s)\";\n  } else {\n    xdisplayUnit = \"Hz\";\n  }\n\n  const options: Highcharts.Options = {\n    chart: {\n      zoomType: 'x',\n    },\n    tooltip: {\n      enabled: true\n    },\n    plotOptions: {\n      series: {\n        enableMouseTracking: true,\n        tooltip: {\n          followPointer: false,\n        },\n        events: {\n          click: (e) => {\n            dispatch(\n              setGaussianGuess(\n                gaussianGuess.filter(\n                  (value: number[], index: number) =>\n                    index !== e.point.series.index - (3 - Number(subtraction))\n                )));\n          }\n        }\n      },\n    },\n  };\n\n  let sourceData: number[][] = [];\n\n  if (dataSource) {\n\n    const xdata = dataSource.axisdata(1, unit).toJs();\n    const ydata = dataSource.rawdata.toJs()[0][0];\n    const header = dataSource.header.toJs();\n\n    const xdataArray = [].slice.call(xdata);\n    sourceData = xdataArray.map((xi: number, i: number) => {\n      return [xi, ydata[i]];\n    });\n\n    // create dummy baseline array and updated the value if fitting has done\n    const baselineData = xdataArray.map((xi: number, i: number) => {\n      return [xi, 0.0];\n    });\n\n    if (isBaselineFitted === true) {\n      baselineData.forEach((item: number[], i: number) => {\n        item[1] = baselineFit[i];\n      });\n    }\n\n    // create subtracted data if the option is selected\n    if (subtraction === true) {\n      const subtractedData = sourceData.map(\n        (item: number[], idx: number) => {\n          return [item[0], item[1] - baselineData[idx][1]]\n        }\n      )\n      options.series = [\n        {\n          name: 'Observation - Baseline',\n          type: 'scatter',\n          data: subtractedData,\n          findNearestPointBy: 'xy',\n        },\n      ];\n    }\n    else {\n      options.series = [\n        {\n          name: 'Observation',\n          type: 'scatter',\n          lineWidth: 2,\n          data: sourceData,\n          allowPointSelect: drag !== \"zoom\",\n          findNearestPointBy: 'xy',\n        },\n        // {\n        //   name: \"Baseline\",\n        //   type: \"scatter\",\n        //   data: props.baselinePoints,\n        //   dragDrop: {\n        //     draggableX: true,\n        //     draggableY: true\n        //   },\n        // },\n      ];\n\n      // add another label if we plot both original data and baseline\n      if (isBaselineFitted === true) {\n        options.series.push({\n          name: 'Baseline fitting',\n          type: 'line',\n          data: baselineData,\n          allowPointSelect: false,\n          colorIndex: 3,\n        })\n      }\n      console.log(\"series\", options.series);\n    }\n\n    if (gaussianFit) {\n      const gaussian = xdataArray.map((xi: number, i: number) => {\n        return [xi, 0.0];\n      });\n      gaussian.forEach((item: number[], i: number) => {\n        item[1] = gaussianFit[i];\n      });\n      options.series.push(\n        {\n          name: 'Gaussian',\n          type: 'line',\n          data: gaussian,\n          findNearestPointBy: 'xy',\n          colorIndex: 5,\n        },\n      );\n    }\n\n    if (gaussianGuess) {\n      const series = gaussianGuess.map((guess: number[], index: number) => {\n        const [xmin, xmax, ymin, ymax] = guess;\n        const xmin2 = dataSource?.convertfreq(xmin, unit);\n        const xmax2 = dataSource?.convertfreq(xmax, unit);\n        const data: Highcharts.SeriesOptionsType = {\n          name: `Peak ${index + 1}`,\n          type: 'polygon',\n          data: [[xmin2, ymin], [xmax2, ymin], [xmax2, ymax], [xmin2, ymax]],\n          color: 'green',\n          opacity: 0.5\n        }\n        return data;\n      });\n      if (series) options.series = [...options.series, ...series];\n    }\n\n    // options.series = [\n    //   {\n    //     name: \"Observation\",\n    //     type: 'line',\n    //     data: sourceData,\n    //     allowPointSelect: selectMode,\n    //   },\n    //   {\n    //     name: \"Baseline\",\n    //     type: \"scatter\",\n    //     data: baselinePoints,\n    //     dragDrop: {\n    //       draggableX: true,\n    //       draggableY: true\n    //     },\n    //   }\n    // ];\n\n    const subtitle = `${header.get(\"CTYPE2\")}: ${toSciSymbol(header.get(\"CRVAL2\"))}, ${header.get(\"CTYPE3\")}: ${toSciSymbol(header.get(\"CRVAL3\"))}`;\n\n    options.title = {\n      text: fileName\n    };\n\n    options.subtitle = {\n      text: subtitle\n    };\n\n    const xAxis = {\n      title: {\n        text: xdisplayUnit,\n      },\n      // labels: {\n      //   format: '{value:.2f}',\n      // }\n    };\n    const yAxis = {\n      title: {\n        text: header.get('BUNIT'),\n      }\n    };\n\n    options.xAxis = xAxis;\n    options.yAxis = yAxis;\n\n  }\n\n  if (drag === \"baseline\" && options.chart) {\n    options.chart.zoomType = 'xy';\n    options.chart.renderTo = chart?.container;\n    options.chart.events = {\n      selection: selectPoints,\n      click: unselectByClick,\n    };\n  }\n  else if (drag === \"gaussian\" && options.chart) {\n    options.chart.zoomType = 'xy';\n    options.chart.renderTo = chart?.container;\n    options.chart.events = {\n      selection: selectRange,\n    };\n  }\n  else if (options.chart) {\n    options.chart.zoomType = 'x';\n    options.chart.events = {\n      selection: undefined,\n      click: undefined,\n      render: undefined,\n    }\n  }\n\n  console.log(\"options\", options)\n\n  const getCursorPos = (event: any) => {\n    let xPos = 0.0;\n    let yPos = 0.0;\n    if (chart) {\n      const e = chart.pointer.normalize(event);\n      const x = e.chartX - chart.plotLeft;\n      const y = e.chartY - chart.plotTop;\n      // const top = chart.container.offsetTop;\n      // const left = chart.container.offsetLeft;\n      // const x = event.clientX - chart.plotLeft - left;\n      // const y = event.clientY - chart.plotTop - top;\n      if (x >= 0 && y >= 0 && x <= chart.chartWidth && y <= chart.chartHeight) {\n        // console.log(chart.xAxis[0].toValue(x, true));\n        // console.log(chart.yAxis[0].toValue(chart.plotHeight - y, true));\n        // setCursorX(chart.xAxis[0].toValue(x, true));\n        // setCursorY(chart.yAxis[0].toValue(y, true));\n        xPos = chart.xAxis[0].toValue(x, true);\n        yPos = chart.yAxis[0].toValue(y, true);\n      }\n      // console.log(event);\n    }\n    // console.log(event);\n    return { xPos, yPos };\n  }\n\n  const handleMouseMove = (event: any) => {\n    const { xPos, yPos } = getCursorPos(event);\n    dispatch(setPosition([xPos, yPos]));\n    // setCursorX(xPos);\n    // setCursorY(yPos);\n  };\n\n  return (\n    <div>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={options}\n        ref={chartComponentRef}\n        containerProps={{\n          onMouseMove: handleMouseMove,\n          // onDoubleClick: handleDoubleClick,\n        }}\n      />\n      <Toolbar\n        unit={unit}\n        setUnit={setUnit}\n        dataSource={dataSource}\n        unSelectAllPoints={unSelectAllPoints}\n      />\n      <Divider />\n      <Collapse isOpen={showBaselineTable}>\n        {/* <Pre>\n          Dummy text.\n        </Pre> */}\n        <BaselineTable height={cardHeight} />\n      </Collapse>\n      <Collapse isOpen={showGaussianTable}>\n        {/* <Pre>\n          Dummy text.\n        </Pre> */}\n        <GaussianTable height={cardHeight} />\n      </Collapse>\n    </div>\n  );\n});\n\n\nconst BaselineTable = (props: any) => {\n  const baselinePoints = useSelector((state: RootState) => state.baseline.dataPoints)\n  const pointX = (rowIndex: number) => (\n    <Cell>{`${baselinePoints[rowIndex] ? (toSciSymbol(baselinePoints[rowIndex][0])) : 0.0}`}</Cell>\n  );\n  const pointY = (rowIndex: number) => (\n    <Cell>{`${baselinePoints[rowIndex] ? (toSciSymbol(baselinePoints[rowIndex][1])) : 0.0}`}</Cell>\n  );\n  return (\n    <Card style={{ display: \"block\", overflow: \"auto\", height: props.height }}>\n      Selected Points:\n      <Table2 numRows={baselinePoints.length} enableGhostCells={true} columnWidths={[400, 400]}>\n        <Column name=\"X coordinate\" cellRenderer={pointX} />\n        <Column name=\"Y coordinate\" cellRenderer={pointY} />\n      </Table2>\n    </Card>\n  )\n}\n\nconst GaussianTable = (props: any) => {\n  const gaussianGuess = useSelector((state: RootState) => state.gaussian.guess);\n\n  const rangeX = (rowIndex: number) => (\n    <Cell>\n      ({`${gaussianGuess[rowIndex] ? (toSciSymbol(gaussianGuess[rowIndex][0])) : 0.0}`},\n      {` ${gaussianGuess[rowIndex] ? (toSciSymbol(gaussianGuess[rowIndex][1])) : 0.0}`})\n    </Cell>\n  );\n  const rangeY = (rowIndex: number) => (\n    <Cell>\n      ({`${gaussianGuess[rowIndex] ? (toSciSymbol(gaussianGuess[rowIndex][2])) : 0.0}`},\n      {` ${gaussianGuess[rowIndex] ? (toSciSymbol(gaussianGuess[rowIndex][3])) : 0.0}`})\n    </Cell>\n  );\n  return (\n    <Card style={{ display: \"block\", overflow: \"auto\", height: props.height }}>\n      Constraints:\n      <Table2 numRows={gaussianGuess.length} enableGhostCells={true} columnWidths={[400, 400]}>\n        {/* <Table2 numRows={gaussianGuess.length} enableGhostCells={true}> */}\n        <Column name=\"X range\" cellRenderer={rangeX} />\n        <Column name=\"Y range\" cellRenderer={rangeY} />\n      </Table2>\n    </Card>\n  )\n}\n\nexport default Viewer;","export default __webpack_public_path__ + \"static/media/salsasource.1eae1293.py\";","import { useState, useEffect, useRef } from 'react';\nimport { Alignment, Button, Card, Icon, Drawer, Navbar, NavbarDivider, NavbarGroup, NavbarHeading } from '@blueprintjs/core';\nimport Viewer from './components/Viewer';\nimport salsaSourceDef from './python/salsasource.py';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from './redux/store'\nimport { toSciSymbol } from './Helper';\n\nimport './App.css';\n\ndeclare global { // <- [reference](https://stackoverflow.com/a/56458070/11542903)\n  interface Window {\n    pyodide: any;\n    jsarray: any;\n    loadPyodide: any;\n    // languagePluginLoader: any;\n  }\n}\n\nconst pyodideInstance = async () => {\n  const pyodide = await window.loadPyodide({\n    indexURL: \"https://cdn.jsdelivr.net/pyodide/v0.18.1/full/\"\n  });\n  await pyodide.loadPackage([\"astropy\", \"scipy\"]);\n  // await pyodide.loadPackage(\"astropy\")\n  return pyodide\n}\n\nconst runScript = async (pyodide: any, code: string) => {\n  await pyodide.runPythonAsync(code)\n  const content = pyodide.globals.get(\"salsa\")\n  console.log(\"globals\", content)\n\n  return content\n}\n\nfunction App() {\n  const dispatch = useDispatch();\n  const pyodideObj = useRef<any>(null);\n  const [pyodideLoaded, setPyodideLoaded] = useState(false);\n  const [newFileName, setNewfileName] = useState(\"\");\n  const [unit, setUnit] = useState(\"freq\");\n  const [dataSource, setDataSource] = useState<any>();\n  const [drawerstate, setDrawerState] = useState(false);\n\n  useEffect(() => {\n    async function init() {\n      if (!pyodideLoaded) {\n        pyodideObj.current = await pyodideInstance();\n        setPyodideLoaded(true);\n      } else {\n        console.log(\"no duplicate reload to avoid pyodide error\")\n      }\n    }\n    init()\n  });\n\n  const getData = async (file: File) => {\n    const script = await (await fetch(salsaSourceDef)).text();\n    // console.log(\"script text\", scriptText)\n    const content = await runScript(pyodideObj.current, script);\n    // console.log(\"content\", content)\n    // console.log(\"header\", content.header.toJs())\n    // const xdata = content.axisdata(1).toJs()\n    // const ydata = content.rawdata.toJs()[0][0]\n\n    setNewfileName(file.name);\n    setDataSource(content);\n  }\n\n  const readFile = (file: File) => {\n    if (file) {\n      console.log(\"processing file:\", file)\n      const reader = new FileReader()\n\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        window.jsarray = new Float32Array(reader.result as ArrayBuffer);\n        getData(file);\n      }\n      reader.readAsArrayBuffer(file)\n    }\n  }\n\n  const header = dataSource && Array.from(dataSource.header.toJs(), ([key, value]) => `${key} = ${value}`);\n\n  return (\n    <div className=\"App\">\n      <Navbar>\n        <NavbarGroup align={Alignment.LEFT}>\n          <NavbarHeading>SalsaTS</NavbarHeading>\n          <NavbarDivider />\n          <Button disabled={!pyodideLoaded} minimal={true}>\n            <label htmlFor=\"input\">\n              <input type=\"file\" id=\"input\" hidden onChange={(e: any) => { readFile(e.target.files[0]) }} />\n              <Icon icon=\"document\" /> Upload\n            </label>\n          </Button>\n        </NavbarGroup>\n        <NavbarGroup align={Alignment.RIGHT}>\n          <Button\n            icon=\"help\"\n            text=\"Help\"\n            minimal={true}\n            onClick={(e) => {\n              e.preventDefault();\n              window.open('https://github.com/appolloford/salsa-ts/wiki', '_blank', 'noopener,noreferrer');\n            }}\n          />\n          <Button icon=\"app-header\" text=\"Header\" minimal={true} onClick={() => setDrawerState(true)} />\n        </NavbarGroup>\n      </Navbar>\n      <Viewer\n        fileName={newFileName}\n        dataSource={dataSource}\n        unit={unit}\n        setUnit={setUnit}\n      />\n      <Drawer\n        isOpen={drawerstate}\n        onClose={() => setDrawerState(false)}\n        children={\n          <Card>\n            {header && header.map((item: string) => <div>{item}</div>)}\n          </Card>\n        }\n      />\n    </div >\n  );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport cursorReducer from './cursorSlice'\nimport baselineReducer from './baselineSlice'\nimport gaussianReducer from './gaussianSlice'\n\nexport const store = configureStore({\n  reducer: {\n    cursor: cursorReducer,\n    baseline: baselineReducer,\n    gaussian: gaussianReducer,\n  },\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}