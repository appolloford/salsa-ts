{"version":3,"sources":["redux/cursorSlice.tsx","redux/baselineSlice.tsx","redux/gaussianSlice.tsx","Helper.tsx","components/Viewer.tsx","python/salsasource.py","App.tsx","reportWebVitals.ts","redux/store.tsx","index.tsx"],"names":["cursorSlice","createSlice","name","initialState","position","drag","reducers","setPosition","state","action","payload","setDrag","actions","baselineSlice","dataPoints","fitValues","subtraction","setDataPoints","setFitValues","setSubtraction","GaussianSlice","order","isFitting","guess","params","fit","setOrder","setIsFitting","setGaussianGuess","setGaussianFit","toSciSymbol","num","digits","toExponential","split","map","item","Number","coeff","exp","toFixed","HC_more","Highcharts","HC_exporting","require","Viewer","memo","props","xdisplayUnit","dispatch","useDispatch","useSelector","cursor","baselineFit","baseline","isBaselineFitted","length","gaussian","gaussianGuess","gaussianFit","chartComponentRef","useRef","chart","current","fileName","dataSource","unit","setUnit","options","zoomType","tooltip","enabled","plotOptions","series","enableMouseTracking","followPointer","events","click","e","filter","value","index","point","sourceData","xdata","axisdata","toJs","ydata","rawdata","header","xdataArray","slice","call","xi","i","baselineData","forEach","subtractedData","idx","type","data","findNearestPointBy","lineWidth","allowPointSelect","push","colorIndex","console","log","xmin","xmax","ymin","ymax","xmin2","convertfreq","xmax2","color","opacity","subtitle","get","title","text","xAxis","yAxis","renderTo","container","selection","points","x","min","max","y","select","getSelectedPoints","convert2freq","result","fit_gaussian","fitGaussian","undefined","render","highcharts","ref","containerProps","onMouseMove","event","xPos","yPos","pointer","normalize","chartX","plotLeft","chartY","plotTop","chartWidth","chartHeight","toValue","getCursorPos","unSelectAllPoints","Toolbar","baselinePoints","fitBaseline","fit_baseline","nGaussian","style","display","content","Position","TOP_LEFT","minimal","icon","small","active","onClick","disabled","className","Classes","TOOLTIP_INDICATOR","width","onValueChange","marginLeft","height","label","inline","onChange","target","pyodideInstance","a","window","loadPyodide","indexURL","pyodide","loadPackage","runScript","code","runPythonAsync","globals","CursorInforPanel","textAlign","BaselinePointTable","overflow","numRows","enableGhostCells","cellRenderer","rowIndex","GaussianGuessTable","columnWidths","App","pyodideObj","useState","pyodideLoaded","setPyodideLoaded","newFileName","setNewfileName","setDataSource","useEffect","init","getData","file","fetch","salsaSourceDef","script","align","Alignment","LEFT","htmlFor","id","hidden","reader","FileReader","onabort","onerror","onload","jsarray","Float32Array","readAsArrayBuffer","readFile","files","RIGHT","preventDefault","open","flex","panel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","cursorReducer","baselineReducer","gaussianReducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61df6c5c.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface CursorState {\n  position: number[]\n  drag: string\n}\n\nconst initialState: CursorState = {\n  position: [0, 0],\n  drag: \"zoom\"\n}\n\nexport const cursorSlice = createSlice({\n  name: 'cursor',\n  initialState,\n  reducers: {\n    setPosition: (state, action: PayloadAction<number[]>) => {\n      state.position = action.payload\n    },\n    setDrag: (state, action: PayloadAction<string>) => {\n      state.drag = action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setPosition, setDrag } = cursorSlice.actions\n\nexport default cursorSlice.reducer","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface BaselineState {\n  dataPoints: number[][]\n  fitValues: number[]\n  subtraction: boolean\n}\n\nconst initialState: BaselineState = {\n  dataPoints: [],\n  fitValues: [],\n  subtraction: false\n}\n\nexport const baselineSlice = createSlice({\n  name: 'baseline',\n  initialState,\n  reducers: {\n    setDataPoints: (state, action: PayloadAction<number[][]>) => {\n      state.dataPoints = action.payload\n    },\n    setFitValues: (state, action: PayloadAction<number[]>) => {\n      state.fitValues = action.payload\n    },\n    setSubtraction: (state, action: PayloadAction<boolean>) => {\n      state.subtraction = action.payload\n    }\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setDataPoints, setFitValues, setSubtraction } = baselineSlice.actions\n\nexport default baselineSlice.reducer","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface GaussianState {\n  order: number\n  isFitting: boolean\n  guess: number[][]\n  params: number[][]\n  fit: number[]\n}\n\nconst initialState: GaussianState = {\n  order: 0,\n  isFitting: false,\n  guess: [],\n  params: [],\n  fit: [],\n}\n\nexport const GaussianSlice = createSlice({\n  name: 'gaussian',\n  initialState,\n  reducers: {\n    setOrder: (state, action: PayloadAction<number>) => {\n      state.order = action.payload\n    },\n    setIsFitting: (state, action: PayloadAction<boolean>) => {\n      state.isFitting = action.payload\n    },\n    setGaussianGuess: (state, action: PayloadAction<number[][]>) => {\n      state.guess = action.payload\n    },\n    setGaussianFit: (state, action: PayloadAction<number[]>) => {\n      state.fit = action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setOrder, setIsFitting, setGaussianGuess, setGaussianFit } = GaussianSlice.actions\n\nexport default GaussianSlice.reducer","export const toSciSymbol = (num: number, digits: number = 3) => {\n  if (!num) {\n    return 0.0;\n  }\n  const [coeff, exp] = num.toExponential().split('e').map(item => Number(item));\n  return exp === 0 ? `${coeff.toFixed(digits)}` : `${coeff.toFixed(digits)}x10^${exp}`;\n}","import { useEffect, useRef, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../redux/store';\nimport { setDrag, setPosition } from '../redux/cursorSlice';\nimport { setDataPoints, setFitValues, setSubtraction } from '../redux/baselineSlice';\nimport { setOrder, setIsFitting, setGaussianGuess, setGaussianFit } from '../redux/gaussianSlice';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport HC_more from 'highcharts/highcharts-more';\nimport HC_exporting from 'highcharts/modules/exporting';\nimport { AnchorButton, Classes, ButtonGroup, Divider, FormGroup, HTMLSelect, NumericInput, Position } from '@blueprintjs/core';\nimport { Popover2, Tooltip2 } from \"@blueprintjs/popover2\";\nimport { toSciSymbol } from \"../Helper\";\n\nHC_more(Highcharts);\nHC_exporting(Highcharts);\nrequire(\"highcharts/modules/draggable-points\")(Highcharts);\nrequire(\"highcharts/modules/accessibility\")(Highcharts);\n\n\nconst Viewer = memo((props: any) => {\n\n  const dispatch = useDispatch();\n  const drag = useSelector((state: RootState) => state.cursor.drag);\n\n  const baselineFit = useSelector((state: RootState) => state.baseline.fitValues);\n  const subtraction = useSelector((state: RootState) => state.baseline.subtraction);\n  const isBaselineFitted = baselineFit.length > 0;\n\n  const order = useSelector((state: RootState) => state.gaussian.order);\n  const isFitting = useSelector((state: RootState) => state.gaussian.isFitting);\n  const gaussianGuess = useSelector((state: RootState) => state.gaussian.guess);\n  const gaussianFit = useSelector((state: RootState) => state.gaussian.fit);\n\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const chart = chartComponentRef.current?.chart;\n\n  const fileName = props.fileName;\n  const dataSource = props.dataSource;\n  const unit = props.unit;\n  const setUnit = props.setUnit;\n\n  const fitGaussian = (order: number, guess: number[][]) => {\n    const result = dataSource?.fit_gaussian(unit, order, guess).toJs();\n    const fit = [].slice.call(result);\n    dispatch(setGaussianFit(fit));\n  }\n\n  const selectPoints = (e: any) => {\n\n    // const chart = chartComponentRef.current?.chart;\n\n    console.log(e)\n    console.log(chart)\n    console.log(\"chart option\", chart?.options)\n\n    if (chart?.series) {\n      chart.series.forEach(\n        (series: any) => {\n          // check the series is selectable, don't select the points on fitting line\n          if (series.options.allowPointSelect === true) {\n            series?.points.forEach(\n              (point: any) => {\n                if (point.x >= e.xAxis[0].min && point.x <= e.xAxis[0].max &&\n                  point.y >= e.yAxis[0].min && point.y <= e.yAxis[0].max) {\n                  point.select(true, true);\n                }\n              }\n            )\n          }\n        }\n      )\n    }\n\n    const data = chart?.getSelectedPoints().map(\n      (point) => { return [point.x || 0.0, point.y || 0.0] }\n    ) || [];\n\n    dispatch(setDataPoints(data));\n\n    // Fire a custom event\n    // console.log(\"highchart\", Highcharts);\n    // Highcharts.fireEvent(chart, 'selectedpoints', { points: chart?.getSelectedPoints() });\n\n    return false; // Don't zoom\n  }\n\n  const unSelectAllPoints = () => {\n    const points = chart?.getSelectedPoints();\n    if (points?.length && points.length > 0) {\n      points.forEach((point) => {\n        point.select(false);\n      })\n    }\n    // dispatch(setDataPoints([]));\n  }\n\n  const selectRange = (e: any) => {\n\n    // const chart = chartComponentRef.current?.chart;\n\n    // console.log(e)\n    // console.log(chart)\n    // console.log(\"chart option\", chart?.options)\n\n    const xmin = dataSource?.convert2freq(e.xAxis[0].min, unit);\n    const xmax = dataSource?.convert2freq(e.xAxis[0].max, unit);\n    const ymin = e.yAxis[0].min;\n    const ymax = e.yAxis[0].max;\n\n    const guess = [xmin, xmax, ymin, ymax];\n    dispatch(setGaussianGuess([...gaussianGuess, guess]));\n\n    if (isFitting) {\n      fitGaussian(order, [...gaussianGuess, guess]);\n    }\n\n    // Fire a custom event\n    // console.log(\"highchart\", Highcharts);\n    // Highcharts.fireEvent(chart, 'selectedpoints', { points: chart?.getSelectedPoints() });\n\n    return false; // Don't zoom\n  }\n\n  function unselectByClick() {\n    const points = chart?.getSelectedPoints();\n    if (points?.length && points.length > 0) {\n      points.forEach((point) => {\n        point.select(false);\n      })\n    }\n    dispatch(setDataPoints([]));\n  }\n\n  // const setCursorX = props.setCursorX;\n  // const setCursorY = props.setCursorY;\n\n  // const addBaselinePoints = (point: Array<number>) => {\n  //   setBaselinePoints([...baselinePoints, point]);\n  // };\n\n  // TODO: update table when drag and drop\n  // const updateBaselinePoints = (oldPoint: Array<number>, newPoint: Array<number>) => {\n  //   // console.log(\"update\", oldPoint, newPoint);\n  //   // const test = baselinePoints.map((x, i) => [i, x]);\n  //   // console.log(\"test\", test)\n  //   // const targetIdx = baselinePoints.filter((ele) => {\n  //   //   console.log(\"filter\", ele)\n  //   //   return ele[0] === oldPoint[0] && ele[1] === oldPoint[1]\n  //   // });\n  //   // console.log(\"idx:\", targetIdx);\n  //   console.log(\"a\", baselinePoints);\n  //   setBaselinePoints([...baselinePoints]);\n  //   console.log(\"b\", baselinePoints);\n  //   // setBaselinePoints(baselinePoints[baselinePoints.map((x, i) => [i, x]).filter(\n  //   //   x => x[1] == point)[0][0]] = point);\n  // }\n\n  let xdisplayUnit;\n\n  if (unit === \"freq-k\") {\n    xdisplayUnit = \"kHz\";\n  } else if (unit === \"freq-m\") {\n    xdisplayUnit = \"MHz\";\n  } else if (unit === \"freq-g\") {\n    xdisplayUnit = \"GHz\";\n  } else if (unit === \"chan\") {\n    xdisplayUnit = \"Channel\";\n  } else if (unit === \"vel\") {\n    xdisplayUnit = \"Velocity (km/s)\";\n  } else {\n    xdisplayUnit = \"Hz\";\n  }\n\n  const options: Highcharts.Options = {\n    chart: {\n      zoomType: 'x',\n    },\n    tooltip: {\n      enabled: true\n    },\n    plotOptions: {\n      series: {\n        enableMouseTracking: true,\n        tooltip: {\n          followPointer: false,\n        },\n        events: {\n          click: (e) => {\n            dispatch(\n              setGaussianGuess(\n                gaussianGuess.filter(\n                  (value: number[], index: number) =>\n                    index !== e.point.series.index - (3 - Number(subtraction))\n                )));\n          }\n        }\n      },\n    },\n  };\n\n  let sourceData: number[][] = [];\n\n  if (dataSource) {\n\n    const xdata = dataSource.axisdata(1, unit).toJs();\n    const ydata = dataSource.rawdata.toJs()[0][0];\n    const header = dataSource.header.toJs();\n\n    const xdataArray = [].slice.call(xdata);\n    sourceData = xdataArray.map((xi: number, i: number) => {\n      return [xi, ydata[i]];\n    });\n\n    // create dummy baseline array and updated the value if fitting has done\n    const baselineData = xdataArray.map((xi: number, i: number) => {\n      return [xi, 0.0];\n    });\n\n    if (isBaselineFitted === true) {\n      baselineData.forEach((item: number[], i: number) => {\n        item[1] = baselineFit[i];\n      });\n    }\n\n    // create subtracted data if the option is selected\n    if (subtraction === true) {\n      const subtractedData = sourceData.map(\n        (item: number[], idx: number) => {\n          return [item[0], item[1] - baselineData[idx][1]]\n        }\n      )\n      options.series = [\n        {\n          name: 'Observation - Baseline',\n          type: 'scatter',\n          data: subtractedData,\n          findNearestPointBy: 'xy',\n        },\n      ];\n    }\n    else {\n      options.series = [\n        {\n          name: 'Observation',\n          type: 'scatter',\n          lineWidth: 2,\n          data: sourceData,\n          allowPointSelect: drag !== \"zoom\",\n          findNearestPointBy: 'xy',\n        },\n        // {\n        //   name: \"Baseline\",\n        //   type: \"scatter\",\n        //   data: props.baselinePoints,\n        //   dragDrop: {\n        //     draggableX: true,\n        //     draggableY: true\n        //   },\n        // },\n      ];\n\n      // add another label if we plot both original data and baseline\n      if (isBaselineFitted === true) {\n        options.series.push({\n          name: 'Baseline fitting',\n          type: 'line',\n          data: baselineData,\n          allowPointSelect: false,\n          colorIndex: 3,\n        })\n      }\n      console.log(\"series\", options.series);\n    }\n\n    if (gaussianFit) {\n      const gaussian = xdataArray.map((xi: number, i: number) => {\n        return [xi, 0.0];\n      });\n      gaussian.forEach((item: number[], i: number) => {\n        item[1] = gaussianFit[i];\n      });\n      options.series.push(\n        {\n          name: 'Gaussian',\n          type: 'line',\n          data: gaussian,\n          findNearestPointBy: 'xy',\n          colorIndex: 5,\n        },\n      );\n    }\n\n    if (gaussianGuess) {\n      const series = gaussianGuess.map((guess: number[], index: number) => {\n        const [xmin, xmax, ymin, ymax] = guess;\n        const xmin2 = dataSource?.convertfreq(xmin, unit);\n        const xmax2 = dataSource?.convertfreq(xmax, unit);\n        const data: Highcharts.SeriesOptionsType = {\n          name: `Peak ${index + 1}`,\n          type: 'polygon',\n          data: [[xmin2, ymin], [xmax2, ymin], [xmax2, ymax], [xmin2, ymax]],\n          color: 'green',\n          opacity: 0.5\n        }\n        return data;\n      });\n      if (series) options.series = [...options.series, ...series];\n    }\n\n    // options.series = [\n    //   {\n    //     name: \"Observation\",\n    //     type: 'line',\n    //     data: sourceData,\n    //     allowPointSelect: selectMode,\n    //   },\n    //   {\n    //     name: \"Baseline\",\n    //     type: \"scatter\",\n    //     data: baselinePoints,\n    //     dragDrop: {\n    //       draggableX: true,\n    //       draggableY: true\n    //     },\n    //   }\n    // ];\n\n    const subtitle = `${header.get(\"CTYPE2\")}: ${toSciSymbol(header.get(\"CRVAL2\"))}, ${header.get(\"CTYPE3\")}: ${toSciSymbol(header.get(\"CRVAL3\"))}`;\n\n    options.title = {\n      text: fileName\n    };\n\n    options.subtitle = {\n      text: subtitle\n    };\n\n    const xAxis = {\n      title: {\n        text: xdisplayUnit,\n      },\n      // labels: {\n      //   format: '{value:.2f}',\n      // }\n    };\n    const yAxis = {\n      title: {\n        text: header.get('BUNIT'),\n      }\n    };\n\n    options.xAxis = xAxis;\n    options.yAxis = yAxis;\n\n  }\n\n  if (drag === \"baseline\" && options.chart) {\n    options.chart.zoomType = 'xy';\n    options.chart.renderTo = chart?.container;\n    options.chart.events = {\n      selection: selectPoints,\n      click: unselectByClick,\n    };\n  }\n  else if (drag === \"gaussian\" && options.chart) {\n    options.chart.zoomType = 'xy';\n    options.chart.renderTo = chart?.container;\n    options.chart.events = {\n      selection: selectRange,\n    };\n  }\n  else if (options.chart) {\n    options.chart.zoomType = 'x';\n    options.chart.events = {\n      selection: undefined,\n      click: undefined,\n      render: undefined,\n    }\n  }\n\n  console.log(\"options\", options)\n\n  const getCursorPos = (event: any) => {\n    let xPos = 0.0;\n    let yPos = 0.0;\n    if (chart) {\n      const e = chart.pointer.normalize(event);\n      const x = e.chartX - chart.plotLeft;\n      const y = e.chartY - chart.plotTop;\n      // const top = chart.container.offsetTop;\n      // const left = chart.container.offsetLeft;\n      // const x = event.clientX - chart.plotLeft - left;\n      // const y = event.clientY - chart.plotTop - top;\n      if (x >= 0 && y >= 0 && x <= chart.chartWidth && y <= chart.chartHeight) {\n        // console.log(chart.xAxis[0].toValue(x, true));\n        // console.log(chart.yAxis[0].toValue(chart.plotHeight - y, true));\n        // setCursorX(chart.xAxis[0].toValue(x, true));\n        // setCursorY(chart.yAxis[0].toValue(y, true));\n        xPos = chart.xAxis[0].toValue(x, true);\n        yPos = chart.yAxis[0].toValue(y, true);\n      }\n      // console.log(event);\n    }\n    // console.log(event);\n    return { xPos, yPos };\n  }\n\n  const handleMouseMove = (event: any) => {\n    const { xPos, yPos } = getCursorPos(event);\n    dispatch(setPosition([xPos, yPos]));\n    // setCursorX(xPos);\n    // setCursorY(yPos);\n  };\n\n  return (\n    <div>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={options}\n        ref={chartComponentRef}\n        containerProps={{\n          onMouseMove: handleMouseMove,\n          // onDoubleClick: handleDoubleClick,\n        }}\n      />\n      <Toolbar\n        unit={unit}\n        setUnit={setUnit}\n        dataSource={dataSource}\n        unSelectAllPoints={unSelectAllPoints}\n      />\n    </div>\n  );\n});\n\nconst Toolbar = (props: any) => {\n  const dispatch = useDispatch();\n  const drag = useSelector((state: RootState) => state.cursor.drag);\n  const baselinePoints = useSelector((state: RootState) => state.baseline.dataPoints);\n  const baselineFit = useSelector((state: RootState) => state.baseline.fitValues);\n  const subtraction = useSelector((state: RootState) => state.baseline.subtraction);\n  const isBaselineFitted = baselineFit.length > 0;\n  const xdata = baselinePoints.map((item: number[]) => { return item[0] });\n  const ydata = baselinePoints.map((item: number[]) => { return item[1] });\n\n  const order = useSelector((state: RootState) => state.gaussian.order);\n  const isFitting = useSelector((state: RootState) => state.gaussian.isFitting);\n  const gaussianGuess = useSelector((state: RootState) => state.gaussian.guess);\n  const dataSource = props.dataSource;\n  const unit = props.unit;\n  const setUnit = props.setUnit;\n\n  const unSelectAllPoints = props.unSelectAllPoints;\n\n  const fitBaseline = (x: number[], y: number[]) => {\n    const result = dataSource?.fit_baseline(x, y, unit).toJs();\n    const fit = [].slice.call(result);\n    dispatch(setFitValues(fit));\n  }\n  const fitGaussian = (nGaussian: number) => {\n    const result = dataSource?.fit_gaussian(unit, nGaussian, gaussianGuess).toJs();\n    const fit = [].slice.call(result);\n    dispatch(setGaussianFit(fit));\n  }\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <ButtonGroup>\n        <Tooltip2\n          content=\"Cursor action: drag to zoom\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton\n            icon=\"zoom-in\"\n            small={true}\n            active={drag === \"zoom\"}\n            onClick={() => { dispatch(setDrag(\"zoom\")) }}\n          />\n        </Tooltip2>\n        <Tooltip2\n          content=\"Cursor action: select baseline points\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton\n            icon=\"widget-button\"\n            small={true}\n            active={drag === \"baseline\"}\n            disabled={subtraction}\n            onClick={() => { dispatch(setDrag(\"baseline\")) }}\n          />\n        </Tooltip2>\n        <Tooltip2\n          content=\"Cursor action: select gaussian peak ranges\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton\n            icon=\"widget\"\n            small={true}\n            active={drag === \"gaussian\"}\n            disabled={!isBaselineFitted || !subtraction}\n            onClick={() => { dispatch(setDrag(\"gaussian\")) }}\n          />\n        </Tooltip2>\n      </ButtonGroup>\n      <Divider />\n      <Tooltip2\n        content=\"Subtraction baseline\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"bring-data\"\n          small={true}\n          active={subtraction}\n          onClick={() => {\n            dispatch(setSubtraction(!subtraction));\n            dispatch(setDrag(\"zoom\"));\n          }}\n        />\n      </Tooltip2>\n      <Tooltip2\n        content=\"Fit baseline\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"regression-chart\"\n          small={true}\n          disabled={!baselinePoints.length}\n          onClick={() => { fitBaseline(xdata, ydata) }}\n        />\n      </Tooltip2>\n      <Tooltip2\n        content=\"Remove all baseline data\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"delete\"\n          small={true}\n          onClick={() => {\n            unSelectAllPoints();\n            dispatch(setDataPoints([]));\n            fitBaseline([], []);\n          }}\n        />\n      </Tooltip2>\n      <Divider />\n      <Tooltip2\n        className={Classes.TOOLTIP_INDICATOR}\n        content=\"Fit Gaussian\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"timeline-bar-chart\"\n          small={true}\n          active={isFitting}\n          disabled={!baselinePoints.length || !subtraction}\n          onClick={() => {\n            if (isFitting) {\n              dispatch(setGaussianFit([]));\n            }\n            else {\n              fitGaussian(order);\n            }\n            dispatch(setIsFitting(!isFitting))\n          }}\n        />\n      </Tooltip2>\n      <Popover2\n        content={\n          <NumericInput\n            style={{ width: 30 }}\n            value={order}\n            min={0}\n            onValueChange={(value) => {\n              dispatch(setOrder(value));\n              if (isFitting) fitGaussian(value);\n            }}\n          />\n        }\n      >\n        <Tooltip2\n          content=\"Number of Gaussian peaks\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton text={order} small={true} />\n        </Tooltip2>\n      </Popover2>\n      <Tooltip2\n        content=\"Remove all gaussian data\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"delete\"\n          small={true}\n          onClick={() => {\n            dispatch(setIsFitting(false));\n            dispatch(setGaussianGuess([]));\n            dispatch(setGaussianFit([]));\n          }}\n        />\n      </Tooltip2>\n\n      <FormGroup style={{ marginLeft: \"auto\", height: 10 }} label=\"x-axis unit:\" inline={true}>\n        <HTMLSelect value={unit} minimal={true} onChange={(e) => { setUnit(e.target.value) }}>\n          <option value=\"freq\">Frequency (Hz)</option>\n          <option value=\"freq-k\">Frequency (kHz)</option>\n          <option value=\"freq-m\">Frequency (MHz)</option>\n          <option value=\"freq-g\">Frequency (GHz)</option>\n          <option value=\"chan\">Channel</option>\n          <option value=\"vel\">Velocity (km/s)</option>\n        </HTMLSelect>\n      </FormGroup>\n    </div>\n  )\n}\n\nexport default Viewer;","export default __webpack_public_path__ + \"static/media/salsasource.4bffd5a6.py\";","import { useState, useEffect, useRef } from 'react';\nimport { Alignment, Button, Card, Icon, Label, Navbar, NavbarDivider, NavbarGroup, NavbarHeading, Tabs, Tab } from '@blueprintjs/core';\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport Viewer from './components/Viewer';\nimport salsaSourceDef from './python/salsasource.py';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from './redux/store'\nimport { toSciSymbol } from './Helper';\n\nimport './App.css';\n\ndeclare global { // <- [reference](https://stackoverflow.com/a/56458070/11542903)\n  interface Window {\n    pyodide: any;\n    jsarray: any;\n    loadPyodide: any;\n    // languagePluginLoader: any;\n  }\n}\n\nconst pyodideInstance = async () => {\n  const pyodide = await window.loadPyodide({\n    indexURL: \"https://cdn.jsdelivr.net/pyodide/v0.18.1/full/\"\n  });\n  await pyodide.loadPackage([\"astropy\", \"scipy\"]);\n  // await pyodide.loadPackage(\"astropy\")\n  return pyodide\n}\n\nconst runScript = async (pyodide: any, code: string) => {\n  await pyodide.runPythonAsync(code)\n  const content = pyodide.globals.get(\"salsa\")\n  console.log(\"globals\", content)\n\n  return content\n}\n\nfunction App() {\n  const dispatch = useDispatch();\n  const pyodideObj = useRef<any>(null);\n  const [pyodideLoaded, setPyodideLoaded] = useState(false);\n  const [newFileName, setNewfileName] = useState(\"\");\n  const [unit, setUnit] = useState(\"freq\");\n  const [dataSource, setDataSource] = useState<any>();\n\n  useEffect(() => {\n    async function init() {\n      if (!pyodideLoaded) {\n        pyodideObj.current = await pyodideInstance();\n        setPyodideLoaded(true);\n      } else {\n        console.log(\"no duplicate reload to avoid pyodide error\")\n      }\n    }\n    init()\n  });\n\n  const getData = async (file: File) => {\n    const script = await (await fetch(salsaSourceDef)).text();\n    // console.log(\"script text\", scriptText)\n    const content = await runScript(pyodideObj.current, script);\n    // console.log(\"content\", content)\n    // console.log(\"header\", content.header.toJs())\n    // const xdata = content.axisdata(1).toJs()\n    // const ydata = content.rawdata.toJs()[0][0]\n\n    setNewfileName(file.name);\n    setDataSource(content);\n  }\n\n  const readFile = (file: File) => {\n    if (file) {\n      console.log(\"processing file:\", file)\n      const reader = new FileReader()\n\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        window.jsarray = new Float32Array(reader.result as ArrayBuffer);\n        getData(file);\n      }\n      reader.readAsArrayBuffer(file)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar>\n        <NavbarGroup align={Alignment.LEFT}>\n          <NavbarHeading>SalsaTS</NavbarHeading>\n          <NavbarDivider />\n          <Button disabled={!pyodideLoaded} minimal={true}>\n            <label htmlFor=\"input\">\n              <input type=\"file\" id=\"input\" hidden onChange={(e: any) => { readFile(e.target.files[0]) }} />\n              <Icon icon=\"document\" /> Upload\n            </label>\n          </Button>\n        </NavbarGroup>\n        <NavbarGroup align={Alignment.RIGHT}>\n          <Button\n            icon=\"help\"\n            text=\"Help\"\n            minimal={true}\n            onClick={(e) => {\n              e.preventDefault();\n              window.open('https://github.com/appolloford/salsa-ts/wiki', '_blank', 'noopener,noreferrer');\n            }}\n          />\n        </NavbarGroup>\n      </Navbar>\n      <Viewer\n        fileName={newFileName}\n        dataSource={dataSource}\n        unit={unit}\n        setUnit={setUnit}\n      />\n      <div style={{ display: \"flex\" }}>\n        <div style={{ flex: 1 }}>\n          <Tabs>\n            <Tab\n              id=\"cursorpanel\"\n              title=\"Cursor Information\"\n              panel={\n                <CursorInforPanel />\n              }\n            />\n            <Tab\n              id=\"baselinepoints\"\n              title=\"Selected Baseline Points\"\n              panel={\n                <BaselinePointTable />\n              }\n            />\n            <Tab\n              id=\"gaussianranges\"\n              title=\"Selected Gaussian Ranges\"\n              panel={\n                <GaussianGuessTable />\n              }\n            />\n          </Tabs>\n        </div>\n      </div>\n    </div >\n  );\n}\n\nconst CursorInforPanel = (props: any) => {\n\n  const position = useSelector((state: RootState) => state.cursor.position);\n  return (\n    <div style={{ textAlign: 'left' }}>\n      <Label>Position: ({toSciSymbol(position[0])}, {toSciSymbol(position[1])})</Label>\n    </div>\n  )\n}\n\n\nconst BaselinePointTable = (props: any) => {\n  const baselinePoints = useSelector((state: RootState) => state.baseline.dataPoints)\n  const pointX = (rowIndex: number) => (\n    <Cell>{`${baselinePoints[rowIndex] ? (toSciSymbol(baselinePoints[rowIndex][0])) : 0.0}`}</Cell>\n  );\n  const pointY = (rowIndex: number) => (\n    <Cell>{`${baselinePoints[rowIndex] ? (toSciSymbol(baselinePoints[rowIndex][1])) : 0.0}`}</Cell>\n  );\n  return (\n    <Card style={{ display: \"block\", overflow: \"auto\", width: 600, height: 150 }}>\n      <Table2 numRows={baselinePoints.length} enableGhostCells={true}>\n        <Column name=\"X coordinate\" cellRenderer={pointX} />\n        <Column name=\"Y coordinate\" cellRenderer={pointY} />\n      </Table2>\n    </Card>\n  )\n}\n\nconst GaussianGuessTable = (props: any) => {\n  const gaussianGuess = useSelector((state: RootState) => state.gaussian.guess);\n\n  const rangeX = (rowIndex: number) => (\n    <Cell>\n      ({`${gaussianGuess[rowIndex] ? (toSciSymbol(gaussianGuess[rowIndex][0])) : 0.0}`},\n      {` ${gaussianGuess[rowIndex] ? (toSciSymbol(gaussianGuess[rowIndex][1])) : 0.0}`})\n    </Cell>\n  );\n  const rangeY = (rowIndex: number) => (\n    <Cell>\n      ({`${gaussianGuess[rowIndex] ? (toSciSymbol(gaussianGuess[rowIndex][2])) : 0.0}`},\n      {` ${gaussianGuess[rowIndex] ? (toSciSymbol(gaussianGuess[rowIndex][3])) : 0.0}`})\n    </Cell>\n  );\n  return (\n    <Card style={{ display: \"block\", overflow: \"auto\", width: 600, height: 150 }}>\n      <Table2 numRows={gaussianGuess.length} enableGhostCells={true} columnWidths={[300, 200]}>\n        <Column name=\"X range\" cellRenderer={rangeX} />\n        <Column name=\"Y range\" cellRenderer={rangeY} />\n      </Table2>\n    </Card>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport cursorReducer from './cursorSlice'\nimport baselineReducer from './baselineSlice'\nimport gaussianReducer from './gaussianSlice'\n\nexport const store = configureStore({\n  reducer: {\n    cursor: cursorReducer,\n    baseline: baselineReducer,\n    gaussian: gaussianReducer,\n  },\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}