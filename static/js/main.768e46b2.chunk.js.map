{"version":3,"sources":["redux/cursorSlice.tsx","redux/baselineSlice.tsx","redux/gaussianSlice.tsx","Helper.tsx","components/Toolbar.tsx","components/Viewer.tsx","python/salsasource.py","App.tsx","reportWebVitals.ts","redux/store.tsx","index.tsx"],"names":["cursorSlice","createSlice","name","initialState","position","drag","reducers","setPosition","state","action","payload","setDrag","actions","baselineSlice","baselinePoints","baselineFitOrder","baselineFitValues","showSubtraction","showBaselineTable","setBaselinePoints","setBaselineFit","setBaselineFitOrder","setShowSubtraction","setShowBaselineTable","GaussianSlice","order","isFitting","guess","gaussianParams","gaussianSingleFit","gaussianStack","showGaussianSingles","showGaussianTable","setOrder","setIsFitting","setGaussianGuess","setGaussianParams","setGaussianSingleFit","setGaussianStack","setShowGaussianSingles","setShowGaussianTable","toSciSymbol","num","digits","toFixed","toExponential","split","map","item","Number","coeff","exp","Toolbar","props","dispatch","useDispatch","useSelector","cursor","baseline","isBaselineFitted","length","gaussian","gaussianGuess","fitGaussian","fitBaseline","unit","setUnit","unSelectAllPoints","style","display","content","Position","TOP_LEFT","minimal","icon","small","active","onClick","disabled","width","value","min","onValueChange","text","className","Classes","TOOLTIP_INDICATOR","marginLeft","height","label","inline","onChange","e","target","HC_more","Highcharts","HC_exporting","require","Viewer","memo","xdisplayUnit","cardHeight","chartComponentRef","useRef","chart","current","fileName","dataSource","points","xdata","ydata","result","fit_baseline","toJs","fit","slice","call","guessInCurrentUnit","g","xmin","xmax","ymin","ymax","tmp1","convertfreq","tmp2","fit_gaussian","stack","singlefit","params","p","getSelectedPoints","forEach","point","select","options","zoomType","tooltip","enabled","plotOptions","series","enableMouseTracking","followPointer","events","click","filter","index","sourceData","axisdata","rawdata","header","xdataArray","xi","i","baselineData","subtractedData","idx","type","data","findNearestPointBy","lineWidth","allowPointSelect","push","colorIndex","console","log","xmin2","xmax2","opacity","single","yi","subtitle","get","title","xAxis","yAxis","renderTo","container","selection","x","max","y","convert2freq","undefined","render","highcharts","ref","containerProps","onMouseMove","event","xPos","yPos","pointer","normalize","chartX","plotLeft","chartY","plotTop","chartWidth","chartHeight","toValue","getCursorPos","isOpen","BaselineTable","overflow","numRows","enableGhostCells","columnWidths","cellRenderer","rowIndex","GaussianTable","pyodideInstance","a","window","loadPyodide","indexURL","pyodide","loadPackage","runScript","code","runPythonAsync","globals","App","pyodideObj","useState","pyodideLoaded","setPyodideLoaded","newFileName","setNewfileName","setDataSource","drawerstate","setDrawerState","useEffect","init","getData","file","fetch","salsaSourceDef","script","Array","from","key","align","Alignment","LEFT","htmlFor","id","hidden","reader","FileReader","onabort","onerror","onload","jsarray","Float32Array","readAsArrayBuffer","readFile","files","RIGHT","preventDefault","open","onClose","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","cursorReducer","baselineReducer","gaussianReducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.768e46b2.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface CursorState {\n  position: number[]\n  drag: string\n}\n\nconst initialState: CursorState = {\n  position: [0, 0],\n  drag: \"zoom\"\n}\n\nexport const cursorSlice = createSlice({\n  name: 'cursor',\n  initialState,\n  reducers: {\n    setPosition: (state, action: PayloadAction<number[]>) => {\n      state.position = action.payload\n    },\n    setDrag: (state, action: PayloadAction<string>) => {\n      state.drag = action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setPosition, setDrag } = cursorSlice.actions\n\nexport default cursorSlice.reducer","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface BaselineState {\n  baselinePoints: number[][]\n  baselineFitOrder: number\n  baselineFitValues: number[]\n  showSubtraction: boolean\n  showBaselineTable: boolean\n}\n\nconst initialState: BaselineState = {\n  baselinePoints: [],\n  baselineFitOrder: 2,\n  baselineFitValues: [],\n  showSubtraction: false,\n  showBaselineTable: false\n}\n\nexport const baselineSlice = createSlice({\n  name: 'baseline',\n  initialState,\n  reducers: {\n    setBaselinePoints: (state, action: PayloadAction<number[][]>) => {\n      state.baselinePoints = action.payload\n    },\n    setBaselineFit: (state, action: PayloadAction<number[]>) => {\n      state.baselineFitValues = action.payload\n    },\n    setBaselineFitOrder: (state, action: PayloadAction<number>) => {\n      state.baselineFitOrder = action.payload\n    },\n    setShowSubtraction: (state, action: PayloadAction<boolean>) => {\n      state.showSubtraction = action.payload\n    },\n    setShowBaselineTable: (state, action: PayloadAction<boolean>) => {\n      state.showBaselineTable = action.payload\n    }\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setBaselinePoints, setBaselineFit, setBaselineFitOrder, setShowSubtraction, setShowBaselineTable } = baselineSlice.actions\n\nexport default baselineSlice.reducer","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface GaussianState {\n  order: number\n  isFitting: boolean\n  guess: number[][]\n  gaussianParams: number[][]\n  gaussianSingleFit: number[][]\n  gaussianStack: number[]\n  showGaussianSingles: boolean\n  showGaussianTable: boolean\n}\n\nconst initialState: GaussianState = {\n  order: 0,\n  isFitting: false,\n  guess: [],\n  gaussianParams: [],\n  gaussianSingleFit: [],\n  gaussianStack: [],\n  showGaussianSingles: false,\n  showGaussianTable: false\n}\n\nexport const GaussianSlice = createSlice({\n  name: 'gaussian',\n  initialState,\n  reducers: {\n    setOrder: (state, action: PayloadAction<number>) => {\n      state.order = action.payload\n    },\n    setIsFitting: (state, action: PayloadAction<boolean>) => {\n      state.isFitting = action.payload\n    },\n    setGaussianGuess: (state, action: PayloadAction<number[][]>) => {\n      state.guess = action.payload\n    },\n    setGaussianParams: (state, action: PayloadAction<number[][]>) => {\n      state.gaussianParams = action.payload\n    },\n    setGaussianSingleFit: (state, action: PayloadAction<number[][]>) => {\n      state.gaussianSingleFit = action.payload\n    },\n    setGaussianStack: (state, action: PayloadAction<number[]>) => {\n      state.gaussianStack = action.payload\n    },\n    setShowGaussianSingles: (state, action: PayloadAction<boolean>) => {\n      state.showGaussianSingles = action.payload\n    },\n    setShowGaussianTable: (state, action: PayloadAction<boolean>) => {\n      state.showGaussianTable = action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setOrder, setIsFitting, setGaussianGuess, setGaussianParams, setGaussianSingleFit, setGaussianStack, setShowGaussianSingles, setShowGaussianTable } = GaussianSlice.actions\n\nexport default GaussianSlice.reducer","export const toSciSymbol = (num: number, digits: number = 3) => {\n  if (!num) {\n    num = 0.0;\n    return num.toFixed(digits);\n  }\n  const [coeff, exp] = num.toExponential().split('e').map(item => Number(item));\n  return exp === 0 ? `${coeff.toFixed(digits)}` : `${coeff.toFixed(digits)}x10^${exp}`;\n}","import { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../redux/store';\nimport { setDrag } from '../redux/cursorSlice';\nimport { setBaselineFitOrder, setShowSubtraction, setShowBaselineTable } from '../redux/baselineSlice';\nimport { setOrder, setIsFitting, setGaussianGuess, setGaussianStack, setShowGaussianSingles, setShowGaussianTable } from '../redux/gaussianSlice';\nimport { AnchorButton, Button, Classes, ButtonGroup, Divider, FormGroup, HTMLSelect, NumericInput, Position } from '@blueprintjs/core';\nimport { Popover2, Tooltip2 } from \"@blueprintjs/popover2\";\nimport { toSciSymbol } from \"../Helper\";\n\nconst Toolbar = (props: any) => {\n  const dispatch = useDispatch();\n\n  const position = useSelector((state: RootState) => state.cursor.position);\n  const drag = useSelector((state: RootState) => state.cursor.drag);\n\n  const baselinePoints = useSelector((state: RootState) => state.baseline.baselinePoints);\n  const baselineFitValues = useSelector((state: RootState) => state.baseline.baselineFitValues);\n  const baselineFitOrder = useSelector((state: RootState) => state.baseline.baselineFitOrder);\n  const showSubtraction = useSelector((state: RootState) => state.baseline.showSubtraction);\n  const showBaselineTable = useSelector((state: RootState) => state.baseline.showBaselineTable);\n  const isBaselineFitted = baselineFitValues.length > 0;\n\n  const order = useSelector((state: RootState) => state.gaussian.order);\n  const isFitting = useSelector((state: RootState) => state.gaussian.isFitting);\n  const gaussianGuess = useSelector((state: RootState) => state.gaussian.guess);\n  const showGaussianSingles = useSelector((state: RootState) => state.gaussian.showGaussianSingles);\n  const showGaussianTable = useSelector((state: RootState) => state.gaussian.showGaussianTable);\n\n  const fitGaussian = props.fitGaussian;\n  const fitBaseline = props.fitBaseline;\n\n  const unit = props.unit;\n  const setUnit = props.setUnit;\n\n  const unSelectAllPoints = props.unSelectAllPoints;\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <ButtonGroup>\n        <Tooltip2\n          content=\"Cursor action: drag to zoom\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton\n            icon=\"zoom-in\"\n            small={true}\n            active={drag === \"zoom\"}\n            onClick={() => { dispatch(setDrag(\"zoom\")) }}\n          />\n        </Tooltip2>\n        <Tooltip2\n          content=\"Cursor action: select baseline points\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton\n            icon=\"widget-button\"\n            small={true}\n            active={drag === \"baseline\"}\n            disabled={showSubtraction}\n            onClick={() => { dispatch(setDrag(\"baseline\")) }}\n          />\n        </Tooltip2>\n        <Tooltip2\n          content=\"Cursor action: select gaussian peak ranges\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton\n            icon=\"widget\"\n            small={true}\n            active={drag === \"gaussian\"}\n            disabled={!isBaselineFitted || !showSubtraction}\n            onClick={() => { dispatch(setDrag(\"gaussian\")) }}\n          />\n        </Tooltip2>\n      </ButtonGroup>\n      <Divider />\n      <Popover2\n        content={\n          <NumericInput\n            style={{ width: 30 }}\n            value={baselineFitOrder}\n            min={1}\n            onValueChange={(value) => {\n              dispatch(setBaselineFitOrder(value));\n              fitBaseline(value, baselinePoints);\n            }}\n          />\n        }\n      >\n        <Tooltip2\n          content=\"Number of Gaussian peaks\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton text={baselineFitOrder} small={true} />\n        </Tooltip2>\n      </Popover2>\n      <Tooltip2\n        content=\"Subtraction baseline\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"bring-data\"\n          small={true}\n          active={showSubtraction}\n          onClick={() => {\n            dispatch(setShowSubtraction(!showSubtraction));\n            dispatch(setDrag(\"zoom\"));\n          }}\n        />\n      </Tooltip2>\n      <Tooltip2\n        content=\"Show baseline table\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"th\"\n          small={true}\n          onClick={() => { dispatch(setShowBaselineTable(!showBaselineTable)) }}\n        />\n      </Tooltip2>\n      <Tooltip2\n        content=\"Remove all baseline data\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"delete\"\n          small={true}\n          onClick={() => {\n            unSelectAllPoints();\n            dispatch(setIsFitting(false));\n            dispatch(setGaussianGuess([]));\n            dispatch(setGaussianStack([]));\n          }}\n        />\n      </Tooltip2>\n      <Divider />\n      <Tooltip2\n        className={Classes.TOOLTIP_INDICATOR}\n        content=\"Fit Gaussian\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"timeline-bar-chart\"\n          small={true}\n          active={isFitting}\n          disabled={!baselinePoints.length || !showSubtraction}\n          onClick={() => {\n            if (isFitting) {\n              dispatch(setGaussianStack([]));\n            }\n            else {\n              fitGaussian(baselineFitValues, order, gaussianGuess);\n            }\n            dispatch(setIsFitting(!isFitting))\n          }}\n        />\n      </Tooltip2>\n      <Tooltip2\n        className={Classes.TOOLTIP_INDICATOR}\n        content=\"Show Gaussian by each\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"stacked-chart\"\n          small={true}\n          active={showGaussianSingles}\n          disabled={!baselinePoints.length || !showSubtraction}\n          onClick={() => {\n            dispatch(setShowGaussianSingles(!showGaussianSingles))\n          }}\n        />\n      </Tooltip2>\n      <Popover2\n        content={\n          <NumericInput\n            style={{ width: 30 }}\n            value={order}\n            min={0}\n            onValueChange={(value) => {\n              dispatch(setOrder(value));\n              if (isFitting) {\n                fitGaussian(baselineFitValues, value, gaussianGuess);\n              }\n            }}\n          />\n        }\n      >\n        <Tooltip2\n          content=\"Number of Gaussian peaks\"\n          position={Position.TOP_LEFT}\n          minimal={true}\n        >\n          <AnchorButton text={order} small={true} />\n        </Tooltip2>\n      </Popover2>\n      <Tooltip2\n        content=\"Show gaussian table\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"th\"\n          small={true}\n          onClick={() => { dispatch(setShowGaussianTable(!showGaussianTable)) }}\n        />\n      </Tooltip2>\n      <Tooltip2\n        content=\"Remove all gaussian data\"\n        position={Position.TOP_LEFT}\n        minimal={true}\n      >\n        <AnchorButton\n          icon=\"delete\"\n          small={true}\n          onClick={() => {\n            dispatch(setIsFitting(false));\n            dispatch(setGaussianGuess([]));\n            dispatch(setGaussianStack([]));\n          }}\n        />\n      </Tooltip2>\n\n      {/* <Label>Position: ({toSciSymbol(position[0])}, {toSciSymbol(position[1])})</Label> */}\n      <Button style={{ marginLeft: \"auto\", height: 10 }} small={true} minimal={true} disabled={true} >\n        (x, y) = ({toSciSymbol(position[0])}, {toSciSymbol(position[1])})\n      </Button>\n      {/* <Text style={{ marginLeft: \"auto\", height: 10 }} >(x, y) = ({toSciSymbol(position[0])}, {toSciSymbol(position[1])})</Text> */}\n      {/* (x, y) = ({toSciSymbol(position[0])}, {toSciSymbol(position[1])}) */}\n\n      <FormGroup style={{ marginLeft: \"auto\", height: 10 }} label=\"x-axis unit:\" inline={true}>\n        <HTMLSelect value={unit} minimal={true} onChange={(e) => { setUnit(e.target.value) }}>\n          <option value=\"freq\">Frequency (Hz)</option>\n          <option value=\"freq-k\">Frequency (kHz)</option>\n          <option value=\"freq-m\">Frequency (MHz)</option>\n          <option value=\"freq-g\">Frequency (GHz)</option>\n          <option value=\"chan\">Channel</option>\n          <option value=\"vel\">Velocity (km/s)</option>\n        </HTMLSelect>\n      </FormGroup>\n    </div>\n  )\n}\n\nexport default Toolbar;","import { useEffect, useRef, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../redux/store';\nimport { setPosition } from '../redux/cursorSlice';\nimport { setBaselinePoints, setBaselineFit } from '../redux/baselineSlice';\nimport { setGaussianGuess, setGaussianParams, setGaussianSingleFit, setGaussianStack } from '../redux/gaussianSlice';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport HC_more from 'highcharts/highcharts-more';\nimport HC_exporting from 'highcharts/modules/exporting';\nimport { Card, Collapse, Divider } from '@blueprintjs/core';\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\nimport { toSciSymbol } from \"../Helper\";\nimport Toolbar from './Toolbar';\n\nHC_more(Highcharts);\nHC_exporting(Highcharts);\nrequire(\"highcharts/modules/draggable-points\")(Highcharts);\nrequire(\"highcharts/modules/accessibility\")(Highcharts);\n\n\nconst Viewer = memo((props: any) => {\n\n  const dispatch = useDispatch();\n  const drag = useSelector((state: RootState) => state.cursor.drag);\n\n  const baselineFitValues = useSelector((state: RootState) => state.baseline.baselineFitValues);\n  const baselineFitOrder = useSelector((state: RootState) => state.baseline.baselineFitOrder);\n  const showSubtraction = useSelector((state: RootState) => state.baseline.showSubtraction);\n  const showBaselineTable = useSelector((state: RootState) => state.baseline.showBaselineTable);\n  const isBaselineFitted = baselineFitValues.length > 0;\n\n  const order = useSelector((state: RootState) => state.gaussian.order);\n  const isFitting = useSelector((state: RootState) => state.gaussian.isFitting);\n  const gaussianGuess = useSelector((state: RootState) => state.gaussian.guess);\n  const gaussianSingleFit = useSelector((state: RootState) => state.gaussian.gaussianSingleFit);\n  const gaussianStack = useSelector((state: RootState) => state.gaussian.gaussianStack);\n  const showGaussianSingles = useSelector((state: RootState) => state.gaussian.showGaussianSingles);\n  const showGaussianTable = useSelector((state: RootState) => state.gaussian.showGaussianTable);\n\n  const cardHeight = 250 / (Number(showBaselineTable) + Number(showGaussianTable));\n\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const chart = chartComponentRef.current?.chart;\n\n  const fileName = props.fileName;\n  const dataSource = props.dataSource;\n  const unit = props.unit;\n  const setUnit = props.setUnit;\n\n  const fitBaseline = (order: number, points: number[][]) => {\n    const xdata = points.map((item: number[]) => { return item[0] });\n    const ydata = points.map((item: number[]) => { return item[1] });\n    const result = dataSource?.fit_baseline(xdata, ydata, unit, order).toJs();\n    const fit = [].slice.call(result);\n    dispatch(setBaselineFit(fit));\n  }\n\n  const fitGaussian = (baseline: number[], order: number, guess: number[][]) => {\n    const guessInCurrentUnit = guess.map((g: number[]) => {\n      const [xmin, xmax, ymin, ymax] = g;\n      const tmp1 = dataSource?.convertfreq(xmin, unit);\n      const tmp2 = dataSource?.convertfreq(xmax, unit);\n      const xmin2 = tmp1 <= tmp2 ? tmp1 : tmp2;\n      const xmax2 = tmp1 <= tmp2 ? tmp2 : tmp1;\n      return [xmin2, xmax2, ymin, ymax];\n    });\n    const result = dataSource?.fit_gaussian(unit, baseline, order, guessInCurrentUnit).toJs();\n    const stack = [].slice.call(result[0]);\n    const singlefit = result[1].map((g: number[]) => [].slice.call(g));\n    const params = result[2].map((p: number[]) => [].slice.call(p));\n    dispatch(setGaussianStack(stack));\n    dispatch(setGaussianParams(params));\n    dispatch(setGaussianSingleFit(singlefit));\n  }\n\n  const selectPoints = (e: any) => {\n\n    // const chart = chartComponentRef.current?.chart;\n\n    // console.log(e)\n    // console.log(chart)\n    // console.log(\"chart option\", chart?.options)\n\n    if (chart?.series) {\n      chart.series.forEach(\n        (series: any) => {\n          // check the series is selectable, don't select the points on fitting line\n          if (series.options.allowPointSelect === true) {\n            series?.points.forEach(\n              (point: any) => {\n                if (point.x >= e.xAxis[0].min && point.x <= e.xAxis[0].max &&\n                  point.y >= e.yAxis[0].min && point.y <= e.yAxis[0].max) {\n                  point.select(true, true);\n                }\n              }\n            )\n          }\n        }\n      )\n    }\n\n    const data = chart?.getSelectedPoints().map(\n      (point) => { return [point.x || 0.0, point.y || 0.0] }\n    ) || [];\n\n    dispatch(setBaselinePoints(data));\n    fitBaseline(baselineFitOrder, data);\n\n    // Fire a custom event\n    // console.log(\"highchart\", Highcharts);\n    // Highcharts.fireEvent(chart, 'selectedpoints', { points: chart?.getSelectedPoints() });\n\n    return false; // Don't zoom\n  }\n\n  const unSelectAllPoints = () => {\n    const points = chart?.getSelectedPoints();\n    if (points?.length && points.length > 0) {\n      points.forEach((point) => {\n        point.select(false);\n      })\n    }\n    dispatch(setBaselinePoints([]));\n    fitBaseline(baselineFitOrder, []);\n  }\n\n  const selectRange = (e: any) => {\n\n    const xmin = dataSource?.convert2freq(e.xAxis[0].min, unit);\n    const xmax = dataSource?.convert2freq(e.xAxis[0].max, unit);\n    const ymin = e.yAxis[0].min;\n    const ymax = e.yAxis[0].max;\n\n    const guess = [xmin, xmax, ymin, ymax];\n    dispatch(setGaussianGuess([...gaussianGuess, guess]));\n\n    if (isFitting) {\n      fitGaussian(baselineFitValues, order, [...gaussianGuess, guess]);\n    }\n\n    return false; // Don't zoom\n  }\n\n  // TODO: update table when drag and drop\n  // const updateBaselinePoints = (oldPoint: Array<number>, newPoint: Array<number>) => {\n  //   // console.log(\"update\", oldPoint, newPoint);\n  //   // const test = baselinePoints.map((x, i) => [i, x]);\n  //   // console.log(\"test\", test)\n  //   // const targetIdx = baselinePoints.filter((ele) => {\n  //   //   console.log(\"filter\", ele)\n  //   //   return ele[0] === oldPoint[0] && ele[1] === oldPoint[1]\n  //   // });\n  //   // console.log(\"idx:\", targetIdx);\n  //   console.log(\"a\", baselinePoints);\n  //   setBaselinePoints([...baselinePoints]);\n  //   console.log(\"b\", baselinePoints);\n  //   // setBaselinePoints(baselinePoints[baselinePoints.map((x, i) => [i, x]).filter(\n  //   //   x => x[1] == point)[0][0]] = point);\n  // }\n\n  let xdisplayUnit;\n\n  if (unit === \"freq-k\") {\n    xdisplayUnit = \"kHz\";\n  } else if (unit === \"freq-m\") {\n    xdisplayUnit = \"MHz\";\n  } else if (unit === \"freq-g\") {\n    xdisplayUnit = \"GHz\";\n  } else if (unit === \"chan\") {\n    xdisplayUnit = \"Channel\";\n  } else if (unit === \"vel\") {\n    xdisplayUnit = \"Velocity (km/s)\";\n  } else {\n    xdisplayUnit = \"Hz\";\n  }\n\n  const options: Highcharts.Options = {\n    chart: {\n      zoomType: 'x',\n    },\n    tooltip: {\n      enabled: true\n    },\n    plotOptions: {\n      series: {\n        enableMouseTracking: true,\n        tooltip: {\n          followPointer: false,\n        },\n        events: {\n          click: (e) => {\n            dispatch(\n              setGaussianGuess(\n                gaussianGuess.filter(\n                  (value: number[], index: number) =>\n                    index !== e.point.series.index - (3 - Number(showSubtraction))\n                )));\n          }\n        }\n      },\n    },\n  };\n\n  let sourceData: number[][] = [];\n\n  if (dataSource) {\n\n    const xdata = dataSource.axisdata(1, unit).toJs();\n    const ydata = dataSource.rawdata.toJs()[0][0];\n    const header = dataSource.header.toJs();\n\n    const xdataArray = [].slice.call(xdata);\n    sourceData = xdataArray.map((xi: number, i: number) => {\n      return [xi, ydata[i]];\n    });\n\n    // create dummy baseline array and updated the value if fitting has done\n    const baselineData = xdataArray.map((xi: number, i: number) => {\n      return [xi, 0.0];\n    });\n\n    if (isBaselineFitted === true) {\n      baselineData.forEach((item: number[], i: number) => {\n        item[1] = baselineFitValues[i];\n      });\n    }\n\n    // create subtracted data if the option is selected\n    if (showSubtraction === true) {\n      const subtractedData = sourceData.map(\n        (item: number[], idx: number) => {\n          return [item[0], item[1] - baselineData[idx][1]]\n        }\n      )\n      options.series = [\n        {\n          name: 'Observation - Baseline',\n          type: 'scatter',\n          data: subtractedData,\n          findNearestPointBy: 'xy',\n        },\n      ];\n    }\n    else {\n      options.series = [\n        {\n          name: 'Observation',\n          type: 'scatter',\n          lineWidth: 2,\n          data: sourceData,\n          allowPointSelect: drag !== \"zoom\",\n          findNearestPointBy: 'xy',\n        },\n        // {\n        //   name: \"Baseline\",\n        //   type: \"scatter\",\n        //   data: props.baselinePoints,\n        //   dragDrop: {\n        //     draggableX: true,\n        //     draggableY: true\n        //   },\n        // },\n      ];\n\n      // add another label if we plot both original data and baseline\n      if (isBaselineFitted === true) {\n        options.series.push({\n          name: 'Baseline fitting',\n          type: 'line',\n          data: baselineData,\n          allowPointSelect: false,\n          colorIndex: 1,\n        })\n      }\n      console.log(\"series\", options.series);\n    }\n\n    if (gaussianGuess) {\n      const series = gaussianGuess.map((guess: number[], index: number) => {\n        const [xmin, xmax, ymin, ymax] = guess;\n        const xmin2 = dataSource?.convertfreq(xmin, unit);\n        const xmax2 = dataSource?.convertfreq(xmax, unit);\n        const data: Highcharts.SeriesOptionsType = {\n          name: `Peak ${index + 1}`,\n          type: 'polygon',\n          data: [[xmin2, ymin], [xmax2, ymin], [xmax2, ymax], [xmin2, ymax]],\n          colorIndex: 2,\n          opacity: 0.5\n        }\n        return data;\n      });\n      if (series) options.series = [...options.series, ...series];\n    }\n\n    if (gaussianStack) {\n      const gaussian = xdataArray.map((xi: number, i: number) => {\n        return [xi, gaussianStack[i]];\n      });\n      options.series.push(\n        {\n          name: 'Gaussian',\n          type: 'line',\n          data: gaussian,\n          findNearestPointBy: 'xy',\n          colorIndex: 3,\n        },\n      );\n    }\n\n    if (gaussianSingleFit && showGaussianSingles) {\n      const singles = gaussianSingleFit.map((single: number[]) => {\n        return single.map((yi: number, i: number) => {\n          return [xdataArray[i], yi];\n        })\n      });\n      singles.forEach((item: number[][], i: number) => {\n        options.series?.push(\n          {\n            name: `Gaussian Component ${i}`,\n            type: 'area',\n            data: item,\n            colorIndex: 4 + i,\n          }\n        )\n      })\n    }\n\n    // options.series = [\n    //   {\n    //     name: \"Observation\",\n    //     type: 'line',\n    //     data: sourceData,\n    //     allowPointSelect: selectMode,\n    //   },\n    //   {\n    //     name: \"Baseline\",\n    //     type: \"scatter\",\n    //     data: baselinePoints,\n    //     dragDrop: {\n    //       draggableX: true,\n    //       draggableY: true\n    //     },\n    //   }\n    // ];\n\n    const subtitle = `${header.get(\"CTYPE2\")}: ${toSciSymbol(header.get(\"CRVAL2\"))}, ${header.get(\"CTYPE3\")}: ${toSciSymbol(header.get(\"CRVAL3\"))}`;\n\n    options.title = {\n      text: fileName\n    };\n\n    options.subtitle = {\n      text: subtitle\n    };\n\n    const xAxis = {\n      title: {\n        text: xdisplayUnit,\n      },\n      // labels: {\n      //   format: '{value:.2f}',\n      // }\n    };\n    const yAxis = {\n      title: {\n        text: header.get('BUNIT'),\n      }\n    };\n\n    options.xAxis = xAxis;\n    options.yAxis = yAxis;\n\n  }\n\n  if (drag === \"baseline\" && options.chart) {\n    options.chart.zoomType = 'xy';\n    options.chart.renderTo = chart?.container;\n    options.chart.events = {\n      selection: selectPoints,\n      click: unSelectAllPoints,\n    };\n  }\n  else if (drag === \"gaussian\" && options.chart) {\n    options.chart.zoomType = 'xy';\n    options.chart.renderTo = chart?.container;\n    options.chart.events = {\n      selection: selectRange,\n    };\n  }\n  else if (options.chart) {\n    options.chart.zoomType = 'x';\n    options.chart.events = {\n      selection: undefined,\n      click: undefined,\n      render: undefined,\n    }\n  }\n\n  console.log(\"options\", options)\n\n  const getCursorPos = (event: any) => {\n    let xPos = 0.0;\n    let yPos = 0.0;\n    if (chart) {\n      const e = chart.pointer.normalize(event);\n      const x = e.chartX - chart.plotLeft;\n      const y = e.chartY - chart.plotTop;\n      // const top = chart.container.offsetTop;\n      // const left = chart.container.offsetLeft;\n      // const x = event.clientX - chart.plotLeft - left;\n      // const y = event.clientY - chart.plotTop - top;\n      if (x >= 0 && y >= 0 && x <= chart.chartWidth && y <= chart.chartHeight) {\n        // console.log(chart.xAxis[0].toValue(x, true));\n        // console.log(chart.yAxis[0].toValue(chart.plotHeight - y, true));\n        xPos = chart.xAxis[0].toValue(x, true);\n        yPos = chart.yAxis[0].toValue(y, true);\n      }\n      // console.log(event);\n    }\n    // console.log(event);\n    return { xPos, yPos };\n  }\n\n  const handleMouseMove = (event: any) => {\n    const { xPos, yPos } = getCursorPos(event);\n    dispatch(setPosition([xPos, yPos]));\n  };\n\n  return (\n    <div>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={options}\n        ref={chartComponentRef}\n        containerProps={{\n          onMouseMove: handleMouseMove,\n        }}\n      />\n      <Toolbar\n        unit={unit}\n        setUnit={setUnit}\n        dataSource={dataSource}\n        fitBaseline={fitBaseline}\n        fitGaussian={fitGaussian}\n        unSelectAllPoints={unSelectAllPoints}\n      />\n      <Divider />\n      <Collapse isOpen={showBaselineTable}>\n        {/* <Pre>\n          Dummy text.\n        </Pre> */}\n        <BaselineTable height={cardHeight} />\n      </Collapse>\n      <Collapse isOpen={showGaussianTable}>\n        <GaussianTable height={cardHeight} />\n      </Collapse>\n    </div>\n  );\n});\n\n\nconst BaselineTable = (props: any) => {\n  const baselinePoints = useSelector((state: RootState) => state.baseline.baselinePoints)\n  const pointX = (rowIndex: number) => (\n    <Cell>{`${baselinePoints[rowIndex] ? (toSciSymbol(baselinePoints[rowIndex][0])) : 0.0}`}</Cell>\n  );\n  const pointY = (rowIndex: number) => (\n    <Cell>{`${baselinePoints[rowIndex] ? (toSciSymbol(baselinePoints[rowIndex][1])) : 0.0}`}</Cell>\n  );\n  return (\n    <Card style={{ display: \"block\", overflow: \"auto\", height: props.height }}>\n      Selected Points:\n      <Table2 numRows={baselinePoints.length} enableGhostCells={true} columnWidths={[400, 400]}>\n        <Column name=\"X coordinate\" cellRenderer={pointX} />\n        <Column name=\"Y coordinate\" cellRenderer={pointY} />\n      </Table2>\n    </Card>\n  )\n}\n\nconst GaussianTable = (props: any) => {\n  const gaussianGuess = useSelector((state: RootState) => state.gaussian.guess);\n\n  const rangeX = (rowIndex: number) => (\n    <Cell>\n      ({`${gaussianGuess[rowIndex] ? (toSciSymbol(gaussianGuess[rowIndex][0])) : 0.0}`},\n      {` ${gaussianGuess[rowIndex] ? (toSciSymbol(gaussianGuess[rowIndex][1])) : 0.0}`})\n    </Cell>\n  );\n  const rangeY = (rowIndex: number) => (\n    <Cell>\n      ({`${gaussianGuess[rowIndex] ? (toSciSymbol(gaussianGuess[rowIndex][2])) : 0.0}`},\n      {` ${gaussianGuess[rowIndex] ? (toSciSymbol(gaussianGuess[rowIndex][3])) : 0.0}`})\n    </Cell>\n  );\n  return (\n    <Card style={{ display: \"block\", overflow: \"auto\", height: props.height }}>\n      Constraints:\n      <Table2 numRows={gaussianGuess.length} enableGhostCells={true} columnWidths={[400, 400]}>\n        {/* <Table2 numRows={gaussianGuess.length} enableGhostCells={true}> */}\n        <Column name=\"X range\" cellRenderer={rangeX} />\n        <Column name=\"Y range\" cellRenderer={rangeY} />\n      </Table2>\n    </Card>\n  )\n}\n\nexport default Viewer;","export default __webpack_public_path__ + \"static/media/salsasource.c1a4e165.py\";","import { useState, useEffect, useRef } from 'react';\nimport { Alignment, Button, Card, Icon, Drawer, Navbar, NavbarDivider, NavbarGroup, NavbarHeading } from '@blueprintjs/core';\nimport Viewer from './components/Viewer';\nimport salsaSourceDef from './python/salsasource.py';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from './redux/store'\nimport { toSciSymbol } from './Helper';\n\nimport './App.css';\n\ndeclare global { // <- [reference](https://stackoverflow.com/a/56458070/11542903)\n  interface Window {\n    pyodide: any;\n    jsarray: any;\n    loadPyodide: any;\n    // languagePluginLoader: any;\n  }\n}\n\nconst pyodideInstance = async () => {\n  const pyodide = await window.loadPyodide({\n    indexURL: \"https://cdn.jsdelivr.net/pyodide/v0.18.1/full/\"\n  });\n  await pyodide.loadPackage([\"astropy\", \"scipy\"]);\n  // await pyodide.loadPackage(\"astropy\")\n  return pyodide\n}\n\nconst runScript = async (pyodide: any, code: string) => {\n  await pyodide.runPythonAsync(code)\n  const content = pyodide.globals.get(\"salsa\")\n  console.log(\"globals\", content)\n\n  return content\n}\n\nfunction App() {\n  const dispatch = useDispatch();\n  const pyodideObj = useRef<any>(null);\n  const [pyodideLoaded, setPyodideLoaded] = useState(false);\n  const [newFileName, setNewfileName] = useState(\"\");\n  const [unit, setUnit] = useState(\"freq\");\n  const [dataSource, setDataSource] = useState<any>();\n  const [drawerstate, setDrawerState] = useState(false);\n\n  useEffect(() => {\n    async function init() {\n      if (!pyodideLoaded) {\n        pyodideObj.current = await pyodideInstance();\n        setPyodideLoaded(true);\n      } else {\n        console.log(\"no duplicate reload to avoid pyodide error\")\n      }\n    }\n    init()\n  });\n\n  const getData = async (file: File) => {\n    const script = await (await fetch(salsaSourceDef)).text();\n    // console.log(\"script text\", scriptText)\n    const content = await runScript(pyodideObj.current, script);\n    // console.log(\"content\", content)\n    // console.log(\"header\", content.header.toJs())\n    // const xdata = content.axisdata(1).toJs()\n    // const ydata = content.rawdata.toJs()[0][0]\n\n    setNewfileName(file.name);\n    setDataSource(content);\n  }\n\n  const readFile = (file: File) => {\n    if (file) {\n      console.log(\"processing file:\", file)\n      const reader = new FileReader()\n\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        window.jsarray = new Float32Array(reader.result as ArrayBuffer);\n        getData(file);\n      }\n      reader.readAsArrayBuffer(file)\n    }\n  }\n\n  const header = dataSource && Array.from(dataSource.header.toJs(), ([key, value]) => `${key} = ${value}`);\n\n  return (\n    <div className=\"App\">\n      <Navbar>\n        <NavbarGroup align={Alignment.LEFT}>\n          <NavbarHeading>SalsaTS</NavbarHeading>\n          <NavbarDivider />\n          <Button disabled={!pyodideLoaded} minimal={true}>\n            <label htmlFor=\"input\">\n              <input type=\"file\" id=\"input\" hidden onChange={(e: any) => { readFile(e.target.files[0]) }} />\n              <Icon icon=\"document\" /> Upload\n            </label>\n          </Button>\n        </NavbarGroup>\n        <NavbarGroup align={Alignment.RIGHT}>\n          <Button\n            icon=\"help\"\n            text=\"Help\"\n            minimal={true}\n            onClick={(e) => {\n              e.preventDefault();\n              window.open('https://github.com/appolloford/salsa-ts/wiki', '_blank', 'noopener,noreferrer');\n            }}\n          />\n          <Button icon=\"app-header\" text=\"Header\" minimal={true} onClick={() => setDrawerState(true)} />\n        </NavbarGroup>\n      </Navbar>\n      <Viewer\n        fileName={newFileName}\n        dataSource={dataSource}\n        unit={unit}\n        setUnit={setUnit}\n      />\n      <Drawer\n        isOpen={drawerstate}\n        onClose={() => setDrawerState(false)}\n        children={\n          <Card>\n            {header && header.map((item: string) => <div>{item}</div>)}\n          </Card>\n        }\n      />\n    </div >\n  );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport cursorReducer from './cursorSlice'\nimport baselineReducer from './baselineSlice'\nimport gaussianReducer from './gaussianSlice'\n\nexport const store = configureStore({\n  reducer: {\n    cursor: cursorReducer,\n    baseline: baselineReducer,\n    gaussian: gaussianReducer,\n  },\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}