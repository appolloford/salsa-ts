{"version":3,"sources":["redux/cursorSlice.tsx","components/Viewer.tsx","components/Controller.tsx","python/salsasource.py","redux/store.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["cursorSlice","createSlice","name","initialState","position","reducers","setPosition","state","action","payload","actions","HC_exporting","Highcharts","require","Viewer","memo","props","selectionFunction","chartComponentRef","useRef","chart","current","isSelecting","cursorDragMode","setBaselinePoints","gaussianGuess","setGaussianGuess","showSubtraction","isBaselineFitted","gaussianData","useState","rectangles","setRectangles","e","console","log","options","series","forEach","allowPointSelect","points","point","x","xAxis","min","max","y","yAxis","select","data","getSelectedPoints","map","xmin","xmax","ymin","ymax","xminpix","toPixels","xmaxpix","yminpix","ymaxpix","width","height","rectangle","renderer","rect","attr","add","xdisplayUnit","fileName","dataSource","unit","zoomType","tooltip","enabled","plotOptions","enableMouseTracking","followPointer","sourceData","xdata","axisdata","toJs","ydata","rawdata","header","xdataArray","slice","call","xi","i","baselineData","baseline","item","subtractedData","idx","type","findNearestPointBy","lineWidth","push","colorIndex","gaussian","subtitle","get","title","text","renderTo","container","events","selection","click","length","undefined","render","dispatch","useDispatch","highcharts","ref","containerProps","onMouseMove","event","xPos","yPos","pointer","normalize","chartX","plotLeft","chartY","plotTop","chartWidth","chartHeight","toValue","getCursorPos","GeneralPanel","setUnit","label","inline","value","minimal","onChange","target","BaselinePanel","clearBaseline","getBaselineFit","setShowSubtraction","checked","onClick","GaussianPanel","nGaussian","setNGaussian","getGaussianFit","fitGaussian","setFitGaussian","onValueChange","Controller","style","id","vertical","panel","store","configureStore","reducer","cursor","cursorRuducer","pyodideInstance","a","window","loadPyodide","indexURL","pyodide","loadPackage","runScript","code","runPythonAsync","content","globals","CursorInforPanel","useSelector","textAlign","defaultValue","selectedValue","disabled","BaselinePointTable","baselinePoints","striped","condensed","interactive","display","overflow","index","toFixed","GaussianGuessTable","App","pyodideObj","pyodideLoaded","setPyodideLoaded","newFileName","setNewfileName","setCursorDragMode","setIsBaselineFitted","setGaussianData","useEffect","init","setDataSource","getData","file","fetch","salsaSourceDef","script","className","align","Alignment","LEFT","htmlFor","hidden","reader","FileReader","onabort","onerror","onload","jsarray","Float32Array","result","readAsArrayBuffer","readFile","files","icon","flex","fit_baseline","fit_gaussian","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.555438df.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface CursorState {\n  position: number[]\n}\n\nconst initialState: CursorState = {\n  position: [0, 0],\n}\n\nexport const cursorSlice = createSlice({\n  name: 'cursor',\n  initialState,\n  reducers: {\n    setPosition: (state, action: PayloadAction<number[]>) => {\n      state.position = action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setPosition } = cursorSlice.actions\n\nexport default cursorSlice.reducer","import { useRef, useState, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPosition } from '../redux/cursorSlice';\nimport { RootState } from '../redux/store';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport HC_exporting from 'highcharts/modules/exporting';\n\nHC_exporting(Highcharts);\nrequire(\"highcharts/modules/draggable-points\")(Highcharts);\n\n\nconst Viewer = memo((props: any) => {\n\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const chart = chartComponentRef.current?.chart;\n\n  // const selectMode = props.selectMode;\n  const isSelecting = props.cursorDragMode === \"baseline\" || props.cursorDragMode === \"gaussian\";\n  const setBaselinePoints = props.setBaselinePoints;\n  const gaussianGuess = props.gaussianGuess;\n  const setGaussianGuess = props.setGaussianGuess;\n  const showSubtraction = props.showSubtraction;\n  const isBaselineFitted = props.isBaselineFitted;\n\n  const gaussianData = props.gaussianData;\n\n  const [rectangles, setRectangles] = useState<any[]>([]);\n\n  const selectPointsByDrag = (e: any) => {\n\n    // const chart = chartComponentRef.current?.chart;\n\n    console.log(e)\n    console.log(chart)\n    console.log(\"chart option\", chart?.options)\n\n    if (chart?.series) {\n      chart.series.forEach(\n        (series: any) => {\n          // check the series is selectable, don't select the points on fitting line\n          if (series.options.allowPointSelect === true) {\n            series?.points.forEach(\n              (point: any) => {\n                if (point.x >= e.xAxis[0].min && point.x <= e.xAxis[0].max &&\n                  point.y >= e.yAxis[0].min && point.y <= e.yAxis[0].max) {\n                  point.select(true, true);\n                }\n              }\n            )\n          }\n        }\n      )\n    }\n\n    if (props.cursorDragMode === \"baseline\") {\n      const data = chart?.getSelectedPoints().map(\n        (point) => { return [point.x, point.y] }\n      )\n      setBaselinePoints(data);\n    }\n\n    // Fire a custom event\n    // console.log(\"highchart\", Highcharts);\n    // Highcharts.fireEvent(chart, 'selectedpoints', { points: chart?.getSelectedPoints() });\n\n    return false; // Don't zoom\n  }\n\n  const selectRange = (e: any) => {\n\n    // const chart = chartComponentRef.current?.chart;\n\n    // console.log(e)\n    // console.log(chart)\n    // console.log(\"chart option\", chart?.options)\n\n    const xmin = e.xAxis[0].min;\n    const xmax = e.xAxis[0].max;\n    const ymin = e.yAxis[0].min;\n    const ymax = e.yAxis[0].max;\n\n    const xminpix = chart?.xAxis[0].toPixels(xmin, false) || 0;\n    const xmaxpix = chart?.xAxis[0].toPixels(xmax, false) || 0;\n    const yminpix = chart?.yAxis[0].toPixels(ymin, false) || 0;\n    const ymaxpix = chart?.yAxis[0].toPixels(ymax, false) || 0;\n    const width = xmaxpix - xminpix;\n    const height = yminpix - ymaxpix;\n\n    console.log(\"rect params\", xminpix, ymaxpix, width, height)\n\n    const rectangle = chart?.renderer.rect(xminpix, ymaxpix, width, height, 2)\n      .attr({\n        \"stroke-width\": 2,\n        \"stroke\": 'red',\n        \"fill\": 'black',\n        \"fill-opacity\": 0.1,\n        \"zIndex\": 3\n      })\n      .add();\n\n    if (props.cursorDragMode === \"gaussian\") {\n      setGaussianGuess([...gaussianGuess, [xmin, xmax, ymin, ymax]]);\n      setRectangles([...rectangles, rectangle]);\n    }\n\n    // Fire a custom event\n    // console.log(\"highchart\", Highcharts);\n    // Highcharts.fireEvent(chart, 'selectedpoints', { points: chart?.getSelectedPoints() });\n\n    return false; // Don't zoom\n  }\n\n  let selectionFunction;\n  if (props.cursorDragMode === \"baseline\") {\n    selectionFunction = selectPointsByDrag;\n  }\n  else if (props.cursorDragMode === \"gaussian\") {\n    selectionFunction = selectRange;\n  }\n\n  function unselectByClick() {\n    const points = chart?.getSelectedPoints();\n    if (points?.length && points.length > 0) {\n      points.forEach((point) => {\n        point.select(false);\n      })\n    }\n    setBaselinePoints([]);\n  }\n\n  // const setCursorX = props.setCursorX;\n  // const setCursorY = props.setCursorY;\n\n  // const addBaselinePoints = (point: Array<number>) => {\n  //   setBaselinePoints([...baselinePoints, point]);\n  // };\n\n  // TODO: update table when drag and drop\n  // const updateBaselinePoints = (oldPoint: Array<number>, newPoint: Array<number>) => {\n  //   // console.log(\"update\", oldPoint, newPoint);\n  //   // const test = baselinePoints.map((x, i) => [i, x]);\n  //   // console.log(\"test\", test)\n  //   // const targetIdx = baselinePoints.filter((ele) => {\n  //   //   console.log(\"filter\", ele)\n  //   //   return ele[0] === oldPoint[0] && ele[1] === oldPoint[1]\n  //   // });\n  //   // console.log(\"idx:\", targetIdx);\n  //   console.log(\"a\", baselinePoints);\n  //   setBaselinePoints([...baselinePoints]);\n  //   console.log(\"b\", baselinePoints);\n  //   // setBaselinePoints(baselinePoints[baselinePoints.map((x, i) => [i, x]).filter(\n  //   //   x => x[1] == point)[0][0]] = point);\n  // }\n\n  const fileName = props.fileName;\n  const dataSource = props.dataSource;\n  const unit = props.unit;\n  let xdisplayUnit;\n\n  if (unit === \"freq-k\") {\n    xdisplayUnit = \"kHz\";\n  } else if (unit === \"freq-m\") {\n    xdisplayUnit = \"MHz\";\n  } else if (unit === \"freq-g\") {\n    xdisplayUnit = \"GHz\";\n  } else if (unit === \"chan\") {\n    xdisplayUnit = \"Channel\";\n  } else if (unit === \"vel\") {\n    xdisplayUnit = \"Velocity (km/s)\";\n  } else {\n    xdisplayUnit = \"Hz\";\n  }\n\n  const options: Highcharts.Options = {\n    chart: {\n      zoomType: 'x',\n    },\n    tooltip: {\n      enabled: true\n    },\n    plotOptions: {\n      series: {\n        enableMouseTracking: true,\n        tooltip: {\n          followPointer: false,\n        },\n      },\n    },\n  };\n\n  let sourceData: number[][] = [];\n\n  if (dataSource) {\n\n    const xdata = dataSource.axisdata(1, unit).toJs();\n    const ydata = dataSource.rawdata.toJs()[0][0];\n    const header = dataSource.header.toJs();\n\n    const xdataArray = [].slice.call(xdata);\n    sourceData = xdataArray.map((xi: number, i: number) => {\n      return [xi, ydata[i]];\n    });\n\n    // create dummy baseline array and updated the value if fitting has done\n    const baselineData = xdataArray.map((xi: number, i: number) => {\n      return [xi, 0.0];\n    });\n\n    if (isBaselineFitted === true) {\n      const ydata = dataSource.baseline.toJs();\n      baselineData.forEach((item: number[], i: number) => {\n        item[1] = ydata[i];\n      });\n    }\n\n    // create subtracted data if the option is selected\n    if (showSubtraction === true) {\n      const subtractedData = sourceData.map(\n        (item: number[], idx: number) => {\n          return [item[0], item[1] - baselineData[idx][1]]\n        }\n      )\n      options.series = [\n        {\n          name: 'Observation - Baseline',\n          type: 'scatter',\n          data: subtractedData,\n          findNearestPointBy: 'xy',\n        },\n      ];\n    }\n    else {\n      options.series = [\n        {\n          name: 'Observation',\n          type: 'scatter',\n          lineWidth: 2,\n          data: sourceData,\n          allowPointSelect: isSelecting,\n          findNearestPointBy: 'xy',\n        },\n        // {\n        //   name: \"Baseline\",\n        //   type: \"scatter\",\n        //   data: props.baselinePoints,\n        //   dragDrop: {\n        //     draggableX: true,\n        //     draggableY: true\n        //   },\n        // },\n      ];\n\n      // add another label if we plot both original data and baseline\n      if (isBaselineFitted === true) {\n        options.series.push({\n          name: 'Baseline fitting',\n          type: 'line',\n          data: baselineData,\n          allowPointSelect: false,\n          colorIndex: 3,\n        })\n      }\n      console.log(\"series\", options.series);\n    }\n\n    if (gaussianData) {\n      const gaussian = xdataArray.map((xi: number, i: number) => {\n        return [xi, 0.0];\n      });\n      gaussian.forEach((item: number[], i: number) => {\n        item[1] = gaussianData[i];\n      });\n      options.series.push(\n        {\n          name: 'Gaussian',\n          type: 'line',\n          data: gaussian,\n          findNearestPointBy: 'xy',\n          colorIndex: 5,\n        },\n      );\n    }\n\n    // options.series = [\n    //   {\n    //     name: \"Observation\",\n    //     type: 'line',\n    //     data: sourceData,\n    //     allowPointSelect: selectMode,\n    //   },\n    //   {\n    //     name: \"Baseline\",\n    //     type: \"scatter\",\n    //     data: baselinePoints,\n    //     dragDrop: {\n    //       draggableX: true,\n    //       draggableY: true\n    //     },\n    //   }\n    // ];\n\n    const subtitle = `${header.get(\"CTYPE2\")}: ${header.get(\"CRVAL2\")}, ${header.get(\"CTYPE3\")}: ${header.get(\"CRVAL3\")}`;\n\n    options.title = {\n      text: fileName\n    };\n\n    options.subtitle = {\n      text: subtitle\n    };\n\n    const xAxis = {\n      title: {\n        text: xdisplayUnit,\n      },\n      // labels: {\n      //   format: '{value:.2f}',\n      // }\n    };\n    const yAxis = {\n      title: {\n        text: header.get('BUNIT'),\n      }\n    };\n\n    options.xAxis = xAxis;\n    options.yAxis = yAxis;\n\n  }\n\n  if (isSelecting === true && options.chart) {\n    options.chart.zoomType = 'xy';\n    options.chart.renderTo = chart?.container;\n    options.chart.events = {\n      selection: selectionFunction,\n      click: unselectByClick,\n    };\n  }\n  else if (options.chart) {\n    options.chart.zoomType = 'x';\n    options.chart.events = {\n      selection: undefined,\n      click: undefined,\n      render: undefined,\n    }\n  }\n\n  console.log(\"options\", options)\n\n  const getCursorPos = (event: any) => {\n    let xPos = 0.0;\n    let yPos = 0.0;\n    if (chart) {\n      const e = chart.pointer.normalize(event);\n      const x = e.chartX - chart.plotLeft;\n      const y = e.chartY - chart.plotTop;\n      // const top = chart.container.offsetTop;\n      // const left = chart.container.offsetLeft;\n      // const x = event.clientX - chart.plotLeft - left;\n      // const y = event.clientY - chart.plotTop - top;\n      if (x >= 0 && y >= 0 && x <= chart.chartWidth && y <= chart.chartHeight) {\n        // console.log(chart.xAxis[0].toValue(x, true));\n        // console.log(chart.yAxis[0].toValue(chart.plotHeight - y, true));\n        // setCursorX(chart.xAxis[0].toValue(x, true));\n        // setCursorY(chart.yAxis[0].toValue(y, true));\n        xPos = chart.xAxis[0].toValue(x, true);\n        yPos = chart.yAxis[0].toValue(y, true);\n      }\n      // console.log(event);\n    }\n    // console.log(event);\n    return { xPos, yPos };\n  }\n\n  const dispatch = useDispatch()\n  const handleMouseMove = (event: any) => {\n    const { xPos, yPos } = getCursorPos(event);\n    dispatch(setPosition([xPos, yPos]))\n    // setCursorX(xPos);\n    // setCursorY(yPos);\n  };\n\n  return (\n    <>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={options}\n        ref={chartComponentRef}\n        containerProps={{\n          onMouseMove: handleMouseMove,\n          // onDoubleClick: handleDoubleClick,\n        }}\n      />\n    </>\n  );\n});\n\n\nexport default Viewer;","import { Button, FormGroup, HTMLSelect, HTMLTable, NumericInput, Switch, Tabs, Tab, Divider } from \"@blueprintjs/core\";\nimport { useState } from \"react\";\nimport BaselineTable from './BaselineTable';\n\nconst Controller = (props: any) => {\n\n  const unit = props.unit;\n  const setUnit = props.setUnit;\n\n  // const selectMode = props.selectMode;\n  // const setSelectMode = props.setSelectMode;\n\n  // const baselinePoints = props.baselinePoints;\n  const getBaselineFit = props.getBaselineFit;\n\n  const showSubtraction = props.showSubtraction;\n  const setShowSubtraction = props.setShowSubtraction;\n\n  const [nGaussian, setNGaussian] = useState(1);\n  const getGaussianFit = props.getGaussianFit;\n  const clearBaseline = props.clearBaseline;\n\n  return (\n    <div style={props.style}>\n      <Tabs id=\"viewerpanels\" vertical={true}>\n        <Tab\n          id=\"generalpanel\"\n          title=\"General\"\n          panel={<GeneralPanel unit={unit} setUnit={setUnit} />} />\n        <Tab\n          id=\"baselinepanel\"\n          title=\"Baseline\"\n          panel={\n            <BaselinePanel\n              // selectMode={selectMode}\n              // setSelectMode={setSelectMode}\n              // baselinePoints={baselinePoints}\n              clearBaseline={clearBaseline}\n              getBaselineFit={getBaselineFit}\n              showSubtraction={showSubtraction}\n              setShowSubtraction={setShowSubtraction}\n            />\n          }\n        />\n        <Tab\n          id=\"gaussianpanel\"\n          title=\"Gaussian\"\n          panel={<GaussianPanel nGaussian={nGaussian} setNGaussian={setNGaussian} getGaussianFit={getGaussianFit} />}\n        />\n      </Tabs>\n    </div>\n  )\n};\n\nconst GeneralPanel = (props: any) => {\n\n  const unit = props.unit;\n  const setUnit = props.setUnit;\n\n  return (\n    <>\n      <FormGroup label=\"x-axis unit:\" inline={true}>\n        <HTMLSelect value={unit} minimal={true} onChange={(e) => { setUnit(e.target.value) }}>\n          <option value=\"freq\">Frequency (Hz)</option>\n          <option value=\"freq-k\">Frequency (kHz)</option>\n          <option value=\"freq-m\">Frequency (MHz)</option>\n          <option value=\"freq-g\">Frequency (GHz)</option>\n          <option value=\"chan\">Channel</option>\n          <option value=\"vel\">Velocity (km/s)</option>\n        </HTMLSelect>\n      </FormGroup>\n    </>\n  )\n}\n\nconst BaselinePanel = (props: any) => {\n\n  // const selectMode = props.selectMode;\n  // const setSelectMode = props.setSelectMode;\n\n  // const baselinePoints = props.baselinePoints;\n  const clearBaseline = props.clearBaseline;\n  const getBaselineFit = props.getBaselineFit;\n\n  const showSubtraction = props.showSubtraction;\n  const setShowSubtraction = props.setShowSubtraction;\n\n  return (\n    <div>\n      {/* <Switch checked={selectMode} label=\"select baseline\" onChange={() => { setSelectMode(!selectMode) }} /> */}\n      <Switch checked={showSubtraction} label=\"Show only subtraction\" onChange={() => { setShowSubtraction(!showSubtraction) }} />\n      <Button text=\"Clear\" onClick={() => { clearBaseline() }} />\n      <Button text=\"Fit Baseline\" onClick={() => { getBaselineFit() }} />\n    </div>\n  )\n}\n\nconst GaussianPanel = (props: any) => {\n  const nGaussian = props.nGaussian;\n  const setNGaussian = props.setNGaussian;\n  const getGaussianFit = props.getGaussianFit;\n  const [fitGaussian, setFitGaussian] = useState(false);\n  return (\n    <div>\n      <Switch\n        checked={fitGaussian}\n        label=\"Fit Gaussian\"\n        onChange={() => {\n          setFitGaussian(!fitGaussian);\n          getGaussianFit(fitGaussian ? 0 : nGaussian);\n        }}\n      />\n      <NumericInput\n        value={nGaussian}\n        min={1}\n        onValueChange={(value) => {\n          setNGaussian(value);\n          if (fitGaussian) getGaussianFit(value);\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Controller;","export default __webpack_public_path__ + \"static/media/salsasource.47396e84.py\";","import { configureStore } from '@reduxjs/toolkit'\nimport cursorRuducer from './cursorSlice'\n\nexport const store = configureStore({\n  reducer: {\n    cursor: cursorRuducer\n  },\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch","import { useState, useEffect, useRef } from 'react';\nimport { Alignment, Button, Card, Collapse, Divider, FormGroup, HTMLTable, Icon, Label, Navbar, NavbarDivider, NavbarGroup, NavbarHeading, RadioGroup, Radio, Tabs, Tab, Text } from '@blueprintjs/core';\nimport Viewer from './components/Viewer';\nimport Controller from './components/Controller';\nimport salsaSourceDef from './python/salsasource.py';\nimport { useSelector } from 'react-redux'\nimport { store, RootState } from './redux/store'\nimport { Provider } from 'react-redux'\n\nimport './App.css';\n\ndeclare global { // <- [reference](https://stackoverflow.com/a/56458070/11542903)\n  interface Window {\n    pyodide: any;\n    jsarray: any;\n    loadPyodide: any;\n    // languagePluginLoader: any;\n  }\n}\n\nconst pyodideInstance = async () => {\n  const pyodide = await window.loadPyodide({\n    indexURL: \"https://cdn.jsdelivr.net/pyodide/v0.18.1/full/\"\n  });\n  await pyodide.loadPackage([\"astropy\", \"scipy\"])\n  // await pyodide.loadPackage(\"astropy\")\n  return pyodide\n}\n\nconst runScript = async (pyodide: any, code: string) => {\n  await pyodide.runPythonAsync(code)\n  const content = pyodide.globals.get(\"salsa\")\n  console.log(\"globals\", content)\n\n  return content\n}\n\nfunction App() {\n  const pyodideObj = useRef<any>(null);\n  const [pyodideLoaded, setPyodideLoaded] = useState(false);\n  const [newFileName, setNewfileName] = useState(\"\");\n  const [unit, setUnit] = useState(\"freq\");\n\n  // const [selectMode, setSelectMode] = useState(false);\n  const [cursorDragMode, setCursorDragMode] = useState(\"zoom\");\n\n  const [baselinePoints, setBaselinePoints] = useState<number[][]>([]);\n  const [isBaselineFitted, setIsBaselineFitted] = useState(false);\n  const [showSubtraction, setShowSubtraction] = useState(false);\n\n  const [gaussianGuess, setGaussianGuess] = useState<number[][]>([]);\n  const [gaussianData, setGaussianData] = useState<number[]>([]);\n\n  // const [cursorX, setCursorX] = useState(0);\n  // const [cursorY, setCursorY] = useState(0);\n\n  useEffect(() => {\n    async function init() {\n      if (!pyodideLoaded) {\n        pyodideObj.current = await pyodideInstance();\n        setPyodideLoaded(true)\n      } else {\n        console.log(\"no duplicate reload to avoid pyodide error\")\n      }\n    }\n    init()\n  });\n\n  const [dataSource, setDataSource] = useState<any>();\n\n  const getData = async (file: File) => {\n    const script = await (await fetch(salsaSourceDef)).text();\n    // console.log(\"script text\", scriptText)\n    const content = await runScript(pyodideObj.current, script);\n    // console.log(\"content\", content)\n    // console.log(\"header\", content.header.toJs())\n    // const xdata = content.axisdata(1).toJs()\n    // const ydata = content.rawdata.toJs()[0][0]\n\n    setNewfileName(file.name);\n    setDataSource(content);\n  }\n\n  const readFile = (file: File) => {\n    if (file) {\n      console.log(\"processing file:\", file)\n      const reader = new FileReader()\n\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        window.jsarray = new Float32Array(reader.result as ArrayBuffer);\n        getData(file);\n      }\n      reader.readAsArrayBuffer(file)\n    }\n  }\n\n  const getBaselineFit = () => {\n\n    const points = baselinePoints;\n\n    const xdata = points.map((item: number[]) => { return item[0] });\n    const ydata = points.map((item: number[]) => { return item[1] });\n    if (!xdata.length || !ydata.length) {\n      dataSource.baseline = [];\n      setIsBaselineFitted(false);\n    }\n    else {\n      dataSource?.fit_baseline(xdata, ydata, unit);\n      setIsBaselineFitted(true);\n    }\n  }\n\n  const clearBaseline = () => {\n    setBaselinePoints([])\n    dataSource?.fit_baseline([], [], unit);\n    setIsBaselineFitted(false);\n  }\n\n  const getGaussianFit = (nGaussian: number) => {\n    const result = dataSource?.fit_gaussian(unit, nGaussian, gaussianGuess).toJs();\n    setGaussianData(result);\n  }\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Navbar>\n          <NavbarGroup align={Alignment.LEFT}>\n            <NavbarHeading>SalsaTS</NavbarHeading>\n            <NavbarDivider />\n            <Button disabled={!pyodideLoaded}>\n              <label htmlFor=\"input\">\n                <input type=\"file\" id=\"input\" hidden onChange={(e: any) => { readFile(e.target.files[0]) }} />\n                <Icon icon=\"document\" /> Upload\n              </label>\n            </Button>\n          </NavbarGroup>\n        </Navbar>\n        <Viewer\n          fileName={newFileName}\n          dataSource={dataSource}\n          unit={unit}\n          // selectMode={selectMode}\n          cursorDragMode={cursorDragMode}\n          // baselinePoints={baselinePoints}\n          gaussianGuess={gaussianGuess}\n          isBaselineFitted={isBaselineFitted}\n          setBaselinePoints={setBaselinePoints}\n          setGaussianGuess={setGaussianGuess}\n          showSubtraction={showSubtraction}\n          gaussianData={gaussianData}\n        // setCursorX={setCursorX}\n        // setCursorY={setCursorY}\n        />\n        <div style={{ display: \"flex\" }}>\n          <Controller\n            style={{ flex: 1 }}\n            unit={unit}\n            setUnit={setUnit}\n            // selectMode={selectMode}\n            // setSelectMode={setSelectMode}\n            // baselinePoints={baselinePoints}\n            clearBaseline={clearBaseline}\n            getBaselineFit={getBaselineFit}\n            showSubtraction={showSubtraction}\n            setShowSubtraction={setShowSubtraction}\n            getGaussianFit={getGaussianFit}\n          />\n          <Divider />\n          <div style={{ flex: 1 }}>\n            <Tabs>\n              <Tab\n                id=\"cursorpanel\"\n                title=\"Cursor Information\"\n                panel={\n                  <CursorInforPanel\n                    // xpos={cursorX}\n                    // ypos={cursorY}\n                    cursorDragMode={cursorDragMode}\n                    isBaselineFitted={isBaselineFitted}\n                    showSubtraction={showSubtraction}\n                    onChange={setCursorDragMode}\n                  />\n                }\n              />\n              <Tab\n                id=\"baselinepoints\"\n                title=\"Selected Baseline Points\"\n                panel={\n                  <BaselinePointTable\n                    baselinePoints={baselinePoints}\n                  />\n                }\n              />\n              <Tab\n                id=\"gaussianranges\"\n                title=\"Selected Gaussian Ranges\"\n                panel={\n                  <GaussianGuessTable\n                    gaussianGuess={gaussianGuess}\n                  />\n                }\n              />\n            </Tabs>\n          </div>\n        </div>\n      </div >\n    </Provider>\n  );\n}\n\nconst CursorInforPanel = (props: any) => {\n  const isBaselineFitted = props.isBaselineFitted;\n  const showSubtraction = props.showSubtraction;\n\n  const position = useSelector((state: RootState) => state.cursor.position)\n  return (\n    <div style={{ textAlign: 'left' }}>\n      <Label>Position: ({position[0]}, {position[1]})</Label>\n      {/* <Label>Position: ({props.xpos}, {props.ypos})</Label> */}\n      <FormGroup label=\"Drag Action:\" inline={true}>\n        <RadioGroup\n          onChange={(e: any) => { console.log(e); props.onChange(e.target.defaultValue) }}\n          selectedValue={props.cursorDragMode}\n          inline={true}\n        >\n          <Radio label=\"Zoom\" value=\"zoom\" />\n          <Radio label=\"Baseline\" value=\"baseline\" />\n          <Radio label=\"Gaussian\" value=\"gaussian\" disabled={!isBaselineFitted || !showSubtraction} />\n        </RadioGroup>\n      </FormGroup>\n    </div>\n  )\n}\n\n\nconst BaselinePointTable = (props: any) => {\n  const baselinePoints = props.baselinePoints;\n  return (\n    <Card>\n      <HTMLTable striped={true} condensed={true} interactive={true}>\n        {/* <caption>Selected Baseline Points</caption> */}\n        <thead style={{ display: \"table\" }}>\n          <tr>\n            <th style={{ width: 140 }}>Selected Points</th>\n            <th style={{ width: 140 }}>X coordinate</th>\n            <th style={{ width: 140 }}>Y coordinate</th>\n            {/* <th><Button icon=\"trash\" text=\"Clear All\" onClick={() => { setBaselinePoints([]) }} /></th> */}\n          </tr>\n        </thead>\n        <tbody style={{ display: \"block\", overflow: \"auto\", height: 150 }}>\n          {\n            baselinePoints.map((item: any, index: number) => {\n              return (\n                <tr style={{ display: \"table\" }} key={item[0]} onClick={() => { console.log(\"click table\") }}>\n                  <td style={{ width: 140, textAlign: 'left' }}>{index}</td>\n                  <td style={{ width: 140, textAlign: 'left' }}>{item[0].toFixed(6)}</td>\n                  <td style={{ width: 140, textAlign: 'left' }}>{item[1].toFixed(6)}</td>\n                  {/* <td><Button icon=\"cross\" minimal={true} onClick={() => { setBaselinePoints(baselinePoints.filter(ele => ele !== item)) }} /></td> */}\n                </tr>);\n            })\n          }\n        </tbody>\n      </HTMLTable>\n    </Card>\n  )\n}\n\nconst GaussianGuessTable = (props: any) => {\n  const gaussianGuess = props.gaussianGuess;\n\n  return (\n    <>\n      <Card>\n        <HTMLTable striped={true} condensed={true} interactive={true}>\n          {/* <caption>Selected Baseline Points</caption> */}\n          <thead style={{ display: \"table\" }}>\n            <tr>\n              <th style={{ width: 140 }}>Selected Range</th>\n              <th style={{ width: 200 }}>X range</th>\n              <th style={{ width: 200 }}>Y range</th>\n              {/* <th><Button icon=\"trash\" text=\"Clear All\" onClick={() => { setBaselinePoints([]) }} /></th> */}\n            </tr>\n          </thead>\n          <tbody style={{ display: \"block\", overflow: \"auto\", height: 150 }}>\n            {\n              gaussianGuess.map((item: any, index: number) => {\n                return (\n                  <tr style={{ display: \"table\" }} key={item[0]} onClick={() => { console.log(\"click table\") }}>\n                    <td style={{ width: 140, textAlign: 'left' }}>{index}</td>\n                    <td style={{ width: 200, textAlign: 'left' }}>({item[0].toFixed(6)}, {item[1].toFixed(6)})</td>\n                    <td style={{ width: 200, textAlign: 'left' }}>({item[2].toFixed(6)}, {item[3].toFixed(6)})</td>\n                    {/* <td><Button icon=\"cross\" minimal={true} onClick={() => { setBaselinePoints(baselinePoints.filter(ele => ele !== item)) }} /></td> */}\n                  </tr>);\n              })\n            }\n          </tbody>\n        </HTMLTable>\n      </Card>\n    </>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}